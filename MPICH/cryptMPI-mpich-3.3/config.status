#! /bin/sh
# Generated by configure.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error


# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi


# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by MPICH $as_me 3.3rc1, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

# Files that config.status was made for.
config_files=" src/hwloc/Makefile src/hwloc/include/Makefile src/hwloc/hwloc/Makefile src/binding/fortran/use_mpi/mpif90model.h src/mpid/ch3/channels/nemesis/include/mpid_nem_net_module_defs.h src/mpid/ch3/channels/nemesis/src/mpid_nem_net_array.c Makefile examples/Makefile test/Makefile test/commands/Makefile src/include/mpichinfo.h mpich-doxygen src/include/mpir_ext.h src/binding/cxx/mpicxx.h src/binding/fortran/mpif_h/mpif.h src/binding/fortran/mpif_h/setbotf.f src/binding/fortran/mpif_h/setbot.c src/binding/fortran/use_mpi/mpi_sizeofs.f90 src/binding/fortran/use_mpi/mpi_base.f90 src/binding/fortran/use_mpi/mpi_constants.f90 src/binding/fortran/use_mpi_f08/mpi_f08_compile_constants.f90 src/binding/fortran/use_mpi_f08/mpi_c_interface_types.f90 src/packaging/pkgconfig/mpich.pc src/packaging/envmods/mpich.module src/env/mpixxx_opts.conf src/env/mpicc.sh src/env/mpicc.bash src/env/mpicxx.sh src/env/mpicxx.bash src/env/mpif77.sh src/env/mpif77.bash src/env/mpifort.sh src/env/mpifort.bash src/env/parkill src/include/mpi.h doc/design/Makefile doc/installguide/Makefile doc/logging/Makefile doc/refman/Makefile doc/userguide/Makefile test/commands/cmdtests"
config_headers=" src/include/mpichconf.h src/hwloc/include/private/autogen/config.h src/hwloc/include/hwloc/autogen/config.h"
config_commands=" depfiles libtool default-1 default-2 default-3 default-4"

ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE]
                   instantiate the configuration file FILE
      --header=FILE[:TEMPLATE]
                   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration commands:
$config_commands

Report bugs to <discuss@mpich.org>.
MPICH home page: <http://www.mpich.org/>."

ac_cs_config="'--prefix=/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/mpich_install/'"
ac_cs_version="\
MPICH config.status 3.3rc1
configured by ./configure, generated by GNU Autoconf 2.69,
  with options \"$ac_cs_config\"

Copyright (C) 2012 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3'
srcdir='.'
INSTALL='/usr/bin/install -c'
MKDIR_P='mkdir -p'
AWK='gawk'
test -n "$AWK" || AWK=awk
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=?*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  --*=)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    $as_echo "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    $as_echo "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    '') as_fn_error $? "missing file argument" ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error $? "ambiguous option: \`$1'
Try \`$0 --help' for more information.";;
  --help | --hel | -h )
    $as_echo "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error $? "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

if $ac_cs_recheck; then
  set X /bin/sh './configure'  '--prefix=/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/mpich_install/' $ac_configure_extra_args --no-create --no-recursion
  shift
  $as_echo "running CONFIG_SHELL=/bin/sh $*" >&6
  CONFIG_SHELL='/bin/sh'
  export CONFIG_SHELL
  exec "$@"
fi

exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  $as_echo "$ac_log"
} >&5

#
# INIT-COMMANDS
#
AMDEP_TRUE="" ac_aux_dir="confdb"


# The HP-UX ksh and POSIX shell print the target directory to stdout
# if CDPATH is set.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

sed_quote_subst='s/\(["`$\\]\)/\\\1/g'
double_quote_subst='s/\(["`\\]\)/\\\1/g'
delay_variable_subst='s/\\\\\\\\\\\$/\\\\\\$/g'
macro_version='2.4.6'
macro_revision='2.4.6'
enable_shared='yes'
enable_static='yes'
pic_mode='default'
enable_fast_install='yes'
shared_archive_member_spec=''
SHELL='/bin/sh'
ECHO='printf %s\n'
PATH_SEPARATOR=':'
host_alias=''
host='x86_64-pc-linux-gnu'
host_os='linux-gnu'
build_alias=''
build='x86_64-pc-linux-gnu'
build_os='linux-gnu'
SED='/usr/bin/sed'
Xsed='/usr/bin/sed -e 1s/^X//'
GREP='/usr/bin/grep'
EGREP='/usr/bin/grep -E'
FGREP='/usr/bin/grep -F'
LD='/usr/bin/ld -m elf_x86_64'
NM='/usr/bin/nm -B'
LN_S='ln -s'
max_cmd_len='1572864'
ac_objext='o'
exeext=''
lt_unset='unset'
lt_SP2NL='tr \040 \012'
lt_NL2SP='tr \015\012 \040\040'
lt_cv_to_host_file_cmd='func_convert_file_noop'
lt_cv_to_tool_file_cmd='func_convert_file_noop'
reload_flag=' -r'
reload_cmds='$LD$reload_flag -o $output$reload_objs'
OBJDUMP='objdump'
deplibs_check_method='pass_all'
file_magic_cmd='$MAGIC_CMD'
file_magic_glob=''
want_nocaseglob='no'
DLLTOOL='false'
sharedlib_from_linklib_cmd='printf %s\n'
AR='ar'
AR_FLAGS='cr'
archiver_list_spec='@'
STRIP='strip'
RANLIB='ranlib'
old_postinstall_cmds='chmod 644 $oldlib~$RANLIB $tool_oldlib'
old_postuninstall_cmds=''
old_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $tool_oldlib'
lock_old_archive_extraction='no'
CC='gcc -std=gnu99'
CFLAGS='   -O2'
compiler='gfortran'
GCC='yes'
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p'\'' | sed '\''/ __gnu_lto/d'\'''
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^T .* \(.*\)$/extern int \1();/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/extern char \1;/p'\'''
lt_cv_sys_global_symbol_to_import=''
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \(.*\) .*$/  {"\1", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/  {"\1", (void *) \&\1},/p'\'''
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \(.*\) .*$/  {"\1", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(lib.*\)$/  {"\1", (void *) \&\1},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/  {"lib\1", (void *) \&\1},/p'\'''
lt_cv_nm_interface='BSD nm'
nm_file_list_spec='@'
lt_sysroot=''
lt_cv_truncate_bin='/usr/bin/dd bs=4096 count=1'
objdir='.libs'
MAGIC_CMD='file'
lt_prog_compiler_no_builtin_flag=' -fno-builtin'
lt_prog_compiler_pic=' -fPIC -DPIC'
lt_prog_compiler_wl='-Wl,'
lt_prog_compiler_static=''
lt_cv_prog_compiler_c_o='yes'
need_locks='no'
MANIFEST_TOOL=':'
DSYMUTIL=''
NMEDIT=''
LIPO=''
OTOOL=''
OTOOL64=''
libext='a'
shrext_cmds='.so'
extract_expsyms_cmds=''
archive_cmds_need_lc='no'
enable_shared_with_static_runtimes='no'
export_dynamic_flag_spec='$wl--export-dynamic'
whole_archive_flag_spec='$wl--whole-archive$convenience $wl--no-whole-archive'
compiler_needs_object='no'
old_archive_from_new_cmds=''
old_archive_from_expsyms_cmds=''
archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
archive_expsym_cmds='echo "{ global:" > $output_objdir/$libname.ver~
            cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
            echo "local: *; };" >> $output_objdir/$libname.ver~
            $CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'
module_cmds=''
module_expsym_cmds=''
with_gnu_ld='yes'
allow_undefined_flag=''
no_undefined_flag=''
hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
hardcode_libdir_separator=''
hardcode_direct='no'
hardcode_direct_absolute='no'
hardcode_minus_L='no'
hardcode_shlibpath_var='unsupported'
hardcode_automatic='no'
inherit_rpath='no'
link_all_deplibs='unknown'
always_export_symbols='no'
export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
exclude_expsyms='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
include_expsyms=''
prelink_cmds=''
postlink_cmds=''
file_list_spec=''
variables_saved_for_relink='PATH LD_LIBRARY_PATH LD_RUN_PATH GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH'
need_lib_prefix='no'
need_version='no'
version_type='linux'
runpath_var='LD_RUN_PATH'
shlibpath_var='LD_LIBRARY_PATH'
shlibpath_overrides_runpath='no'
libname_spec='lib$name'
library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
soname_spec='$libname$release$shared_ext$major'
install_override_mode=''
postinstall_cmds=''
postuninstall_cmds=''
finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
finish_eval=''
hardcode_into_libs='yes'
sys_lib_search_path_spec='/usr/lib/gcc/x86_64-redhat-linux/4.8.5 /usr/lib64 /lib64 /usr/lib /lib '
configure_time_dlsearch_path='/lib /usr/lib /opt/beegfs/lib /usr/lib64/dyninst /usr/lib64/iscsi /usr/lib64/mysql '
configure_time_lt_sys_library_path=''
hardcode_action='immediate'
enable_dlopen='unknown'
enable_dlopen_self='unknown'
enable_dlopen_self_static='unknown'
old_striplib='strip --strip-debug'
striplib='strip --strip-unneeded'
compiler_lib_search_dirs=''
predep_objects=''
postdep_objects=''
predeps=''
postdeps=''
compiler_lib_search_path=''
LD_CXX='/usr/bin/ld -m elf_x86_64'
LD_FC='/usr/bin/ld -m elf_x86_64'
LD_F77='/usr/bin/ld -m elf_x86_64'
reload_flag_CXX=' -r'
reload_flag_FC=' -r'
reload_flag_F77=' -r'
reload_cmds_CXX='$LD$reload_flag -o $output$reload_objs'
reload_cmds_FC='$LD$reload_flag -o $output$reload_objs'
reload_cmds_F77='$LD$reload_flag -o $output$reload_objs'
old_archive_cmds_CXX='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $tool_oldlib'
old_archive_cmds_FC='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $tool_oldlib'
old_archive_cmds_F77='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $tool_oldlib'
compiler_CXX='g++'
compiler_FC='gfortran'
compiler_F77='gfortran'
GCC_CXX='yes'
GCC_FC='yes'
GCC_F77='yes'
lt_prog_compiler_no_builtin_flag_CXX=' -fno-builtin'
lt_prog_compiler_no_builtin_flag_FC=''
lt_prog_compiler_no_builtin_flag_F77=''
lt_prog_compiler_pic_CXX=' -fPIC -DPIC'
lt_prog_compiler_pic_FC=' -fPIC'
lt_prog_compiler_pic_F77=' -fPIC'
lt_prog_compiler_wl_CXX='-Wl,'
lt_prog_compiler_wl_FC='-Wl,'
lt_prog_compiler_wl_F77='-Wl,'
lt_prog_compiler_static_CXX=''
lt_prog_compiler_static_FC=''
lt_prog_compiler_static_F77=''
lt_cv_prog_compiler_c_o_CXX='yes'
lt_cv_prog_compiler_c_o_FC='yes'
lt_cv_prog_compiler_c_o_F77='yes'
archive_cmds_need_lc_CXX='no'
archive_cmds_need_lc_FC='no'
archive_cmds_need_lc_F77='no'
enable_shared_with_static_runtimes_CXX='no'
enable_shared_with_static_runtimes_FC='no'
enable_shared_with_static_runtimes_F77='no'
export_dynamic_flag_spec_CXX='$wl--export-dynamic'
export_dynamic_flag_spec_FC='$wl--export-dynamic'
export_dynamic_flag_spec_F77='$wl--export-dynamic'
whole_archive_flag_spec_CXX='$wl--whole-archive$convenience $wl--no-whole-archive'
whole_archive_flag_spec_FC='$wl--whole-archive$convenience $wl--no-whole-archive'
whole_archive_flag_spec_F77='$wl--whole-archive$convenience $wl--no-whole-archive'
compiler_needs_object_CXX='no'
compiler_needs_object_FC='no'
compiler_needs_object_F77='no'
old_archive_from_new_cmds_CXX=''
old_archive_from_new_cmds_FC=''
old_archive_from_new_cmds_F77=''
old_archive_from_expsyms_cmds_CXX=''
old_archive_from_expsyms_cmds_FC=''
old_archive_from_expsyms_cmds_F77=''
archive_cmds_CXX='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'
archive_cmds_FC='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
archive_cmds_F77='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
archive_expsym_cmds_CXX='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
archive_expsym_cmds_FC='echo "{ global:" > $output_objdir/$libname.ver~
            cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
            echo "local: *; };" >> $output_objdir/$libname.ver~
            $CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'
archive_expsym_cmds_F77='echo "{ global:" > $output_objdir/$libname.ver~
            cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
            echo "local: *; };" >> $output_objdir/$libname.ver~
            $CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'
module_cmds_CXX=''
module_cmds_FC=''
module_cmds_F77=''
module_expsym_cmds_CXX=''
module_expsym_cmds_FC=''
module_expsym_cmds_F77=''
with_gnu_ld_CXX='yes'
with_gnu_ld_FC='yes'
with_gnu_ld_F77='yes'
allow_undefined_flag_CXX=''
allow_undefined_flag_FC=''
allow_undefined_flag_F77=''
no_undefined_flag_CXX=''
no_undefined_flag_FC=''
no_undefined_flag_F77=''
hardcode_libdir_flag_spec_CXX='$wl-rpath $wl$libdir'
hardcode_libdir_flag_spec_FC='$wl-rpath $wl$libdir'
hardcode_libdir_flag_spec_F77='$wl-rpath $wl$libdir'
hardcode_libdir_separator_CXX=''
hardcode_libdir_separator_FC=''
hardcode_libdir_separator_F77=''
hardcode_direct_CXX='no'
hardcode_direct_FC='no'
hardcode_direct_F77='no'
hardcode_direct_absolute_CXX='no'
hardcode_direct_absolute_FC='no'
hardcode_direct_absolute_F77='no'
hardcode_minus_L_CXX='no'
hardcode_minus_L_FC='no'
hardcode_minus_L_F77='no'
hardcode_shlibpath_var_CXX='unsupported'
hardcode_shlibpath_var_FC='unsupported'
hardcode_shlibpath_var_F77='unsupported'
hardcode_automatic_CXX='no'
hardcode_automatic_FC='no'
hardcode_automatic_F77='no'
inherit_rpath_CXX='no'
inherit_rpath_FC='no'
inherit_rpath_F77='no'
link_all_deplibs_CXX='unknown'
link_all_deplibs_FC='unknown'
link_all_deplibs_F77='unknown'
always_export_symbols_CXX='no'
always_export_symbols_FC='no'
always_export_symbols_F77='no'
export_symbols_cmds_CXX='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
export_symbols_cmds_FC='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
export_symbols_cmds_F77='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
exclude_expsyms_CXX='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
exclude_expsyms_FC='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
exclude_expsyms_F77='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
include_expsyms_CXX=''
include_expsyms_FC=''
include_expsyms_F77=''
prelink_cmds_CXX=''
prelink_cmds_FC=''
prelink_cmds_F77=''
postlink_cmds_CXX=''
postlink_cmds_FC=''
postlink_cmds_F77=''
file_list_spec_CXX=''
file_list_spec_FC=''
file_list_spec_F77=''
hardcode_action_CXX='immediate'
hardcode_action_FC='immediate'
hardcode_action_F77='immediate'
compiler_lib_search_dirs_CXX='/usr/lib/gcc/x86_64-redhat-linux/4.8.5 /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64 /lib/../lib64 /usr/lib/../lib64 /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../..'
compiler_lib_search_dirs_FC='/usr/lib/gcc/x86_64-redhat-linux/4.8.5 /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64 /lib/../lib64 /usr/lib/../lib64 /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../..'
compiler_lib_search_dirs_F77=''
predep_objects_CXX='/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crti.o /usr/lib/gcc/x86_64-redhat-linux/4.8.5/crtbeginS.o'
predep_objects_FC='/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crti.o /usr/lib/gcc/x86_64-redhat-linux/4.8.5/crtbeginS.o'
predep_objects_F77=''
postdep_objects_CXX='/usr/lib/gcc/x86_64-redhat-linux/4.8.5/crtendS.o /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crtn.o'
postdep_objects_FC='/usr/lib/gcc/x86_64-redhat-linux/4.8.5/crtendS.o /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64/crtn.o'
postdep_objects_F77=''
predeps_CXX=''
predeps_FC=''
predeps_F77=''
postdeps_CXX='-lstdc++ -lm -lgcc_s -lc -lgcc_s'
postdeps_FC='-lgfortran -lm -lgcc_s -lquadmath -lm -lgcc_s -lc -lgcc_s'
postdeps_F77=''
compiler_lib_search_path_CXX='-L/usr/lib/gcc/x86_64-redhat-linux/4.8.5 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../..'
compiler_lib_search_path_FC='-L/usr/lib/gcc/x86_64-redhat-linux/4.8.5 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../..'
compiler_lib_search_path_F77=''

LTCC='gcc'
LTCFLAGS=' '
compiler='gcc'

# A function that is used when there is no print builtin or printf.
func_fallback_echo ()
{
  eval 'cat <<_LTECHO_EOF
$1
_LTECHO_EOF'
}

# Quote evaled strings.
for var in SHELL ECHO PATH_SEPARATOR SED GREP EGREP FGREP LD NM LN_S lt_SP2NL lt_NL2SP reload_flag OBJDUMP deplibs_check_method file_magic_cmd file_magic_glob want_nocaseglob DLLTOOL sharedlib_from_linklib_cmd AR AR_FLAGS archiver_list_spec STRIP RANLIB CC CFLAGS compiler lt_cv_sys_global_symbol_pipe lt_cv_sys_global_symbol_to_cdecl lt_cv_sys_global_symbol_to_import lt_cv_sys_global_symbol_to_c_name_address lt_cv_sys_global_symbol_to_c_name_address_lib_prefix lt_cv_nm_interface nm_file_list_spec lt_cv_truncate_bin lt_prog_compiler_no_builtin_flag lt_prog_compiler_pic lt_prog_compiler_wl lt_prog_compiler_static lt_cv_prog_compiler_c_o need_locks MANIFEST_TOOL DSYMUTIL NMEDIT LIPO OTOOL OTOOL64 shrext_cmds export_dynamic_flag_spec whole_archive_flag_spec compiler_needs_object with_gnu_ld allow_undefined_flag no_undefined_flag hardcode_libdir_flag_spec hardcode_libdir_separator exclude_expsyms include_expsyms file_list_spec variables_saved_for_relink libname_spec library_names_spec soname_spec install_override_mode finish_eval old_striplib striplib compiler_lib_search_dirs predep_objects postdep_objects predeps postdeps compiler_lib_search_path LD_CXX LD_FC LD_F77 reload_flag_CXX reload_flag_FC reload_flag_F77 compiler_CXX compiler_FC compiler_F77 lt_prog_compiler_no_builtin_flag_CXX lt_prog_compiler_no_builtin_flag_FC lt_prog_compiler_no_builtin_flag_F77 lt_prog_compiler_pic_CXX lt_prog_compiler_pic_FC lt_prog_compiler_pic_F77 lt_prog_compiler_wl_CXX lt_prog_compiler_wl_FC lt_prog_compiler_wl_F77 lt_prog_compiler_static_CXX lt_prog_compiler_static_FC lt_prog_compiler_static_F77 lt_cv_prog_compiler_c_o_CXX lt_cv_prog_compiler_c_o_FC lt_cv_prog_compiler_c_o_F77 export_dynamic_flag_spec_CXX export_dynamic_flag_spec_FC export_dynamic_flag_spec_F77 whole_archive_flag_spec_CXX whole_archive_flag_spec_FC whole_archive_flag_spec_F77 compiler_needs_object_CXX compiler_needs_object_FC compiler_needs_object_F77 with_gnu_ld_CXX with_gnu_ld_FC with_gnu_ld_F77 allow_undefined_flag_CXX allow_undefined_flag_FC allow_undefined_flag_F77 no_undefined_flag_CXX no_undefined_flag_FC no_undefined_flag_F77 hardcode_libdir_flag_spec_CXX hardcode_libdir_flag_spec_FC hardcode_libdir_flag_spec_F77 hardcode_libdir_separator_CXX hardcode_libdir_separator_FC hardcode_libdir_separator_F77 exclude_expsyms_CXX exclude_expsyms_FC exclude_expsyms_F77 include_expsyms_CXX include_expsyms_FC include_expsyms_F77 file_list_spec_CXX file_list_spec_FC file_list_spec_F77 compiler_lib_search_dirs_CXX compiler_lib_search_dirs_FC compiler_lib_search_dirs_F77 predep_objects_CXX predep_objects_FC predep_objects_F77 postdep_objects_CXX postdep_objects_FC postdep_objects_F77 predeps_CXX predeps_FC predeps_F77 postdeps_CXX postdeps_FC postdeps_F77 compiler_lib_search_path_CXX compiler_lib_search_path_FC compiler_lib_search_path_F77; do
    case `eval \\$ECHO \\""\\$$var"\\"` in
    *[\\\`\"\$]*)
      eval "lt_$var=\\\"\`\$ECHO \"\$$var\" | \$SED \"\$sed_quote_subst\"\`\\\"" ## exclude from sc_prohibit_nested_quotes
      ;;
    *)
      eval "lt_$var=\\\"\$$var\\\""
      ;;
    esac
done

# Double-quote double-evaled strings.
for var in reload_cmds old_postinstall_cmds old_postuninstall_cmds old_archive_cmds extract_expsyms_cmds old_archive_from_new_cmds old_archive_from_expsyms_cmds archive_cmds archive_expsym_cmds module_cmds module_expsym_cmds export_symbols_cmds prelink_cmds postlink_cmds postinstall_cmds postuninstall_cmds finish_cmds sys_lib_search_path_spec configure_time_dlsearch_path configure_time_lt_sys_library_path reload_cmds_CXX reload_cmds_FC reload_cmds_F77 old_archive_cmds_CXX old_archive_cmds_FC old_archive_cmds_F77 old_archive_from_new_cmds_CXX old_archive_from_new_cmds_FC old_archive_from_new_cmds_F77 old_archive_from_expsyms_cmds_CXX old_archive_from_expsyms_cmds_FC old_archive_from_expsyms_cmds_F77 archive_cmds_CXX archive_cmds_FC archive_cmds_F77 archive_expsym_cmds_CXX archive_expsym_cmds_FC archive_expsym_cmds_F77 module_cmds_CXX module_cmds_FC module_cmds_F77 module_expsym_cmds_CXX module_expsym_cmds_FC module_expsym_cmds_F77 export_symbols_cmds_CXX export_symbols_cmds_FC export_symbols_cmds_F77 prelink_cmds_CXX prelink_cmds_FC prelink_cmds_F77 postlink_cmds_CXX postlink_cmds_FC postlink_cmds_F77; do
    case `eval \\$ECHO \\""\\$$var"\\"` in
    *[\\\`\"\$]*)
      eval "lt_$var=\\\"\`\$ECHO \"\$$var\" | \$SED -e \"\$double_quote_subst\" -e \"\$sed_quote_subst\" -e \"\$delay_variable_subst\"\`\\\"" ## exclude from sc_prohibit_nested_quotes
      ;;
    *)
      eval "lt_$var=\\\"\$$var\\\""
      ;;
    esac
done

ac_aux_dir='confdb'

# See if we are running on zsh, and set the options that allow our
# commands through without removal of \ escapes INIT.
if test -n "${ZSH_VERSION+set}"; then
   setopt NO_GLOB_SUBST
fi


    PACKAGE='mpich'
    VERSION='3.3rc1'
    RM='rm -f'
    ofile='libtool'







ac_aux_dir='confdb'


master_top_srcdir=/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3
enable_f77=yes
enable_fc=yes
has_exclaim=yes
has_fort_real8=yes
includebuild_dir=/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/src/include
libbuild_dir=/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/lib
bashWorks=yes

EXTERNAL_SETUPS=""
LIBDIR="/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/lib"
MPILIBNAME="mpi"
PMPILIBNAME="pmpi"
AR="ar"
CC="gcc -std=gnu99"
CPPFLAGS="  -I/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/src/mpl/include -I/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/src/mpl/include -I/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/src/openpa/src -I/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/src/openpa/src -D_REENTRANT -I/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/src/mpi/romio/include"
CFLAGS="   -O2"
export LIBDIR ; export MPILIBNAME ; export AR ; export CC ; export CPPFLAGS
export PMPILIBNAME
export CFLAGS
# For test/mpi/configure
MPI_SRCDIR=/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/src/pm/hydra
MPI_NO_SPAWN=
export MPI_SRCDIR
export MPI_NO_SPAWN





# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "src/include/mpichconf.h") CONFIG_HEADERS="$CONFIG_HEADERS src/include/mpichconf.h" ;;
    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
    "libtool") CONFIG_COMMANDS="$CONFIG_COMMANDS libtool" ;;
    "src/hwloc/include/private/autogen/config.h") CONFIG_HEADERS="$CONFIG_HEADERS src/hwloc/include/private/autogen/config.h" ;;
    "src/hwloc/include/hwloc/autogen/config.h") CONFIG_HEADERS="$CONFIG_HEADERS src/hwloc/include/hwloc/autogen/config.h" ;;
    "src/hwloc/Makefile") CONFIG_FILES="$CONFIG_FILES src/hwloc/Makefile" ;;
    "src/hwloc/include/Makefile") CONFIG_FILES="$CONFIG_FILES src/hwloc/include/Makefile" ;;
    "src/hwloc/hwloc/Makefile") CONFIG_FILES="$CONFIG_FILES src/hwloc/hwloc/Makefile" ;;
    "default-1") CONFIG_COMMANDS="$CONFIG_COMMANDS default-1" ;;
    "src/mpid/ch4/src/mpid_ch4_net_array.c") CONFIG_FILES="$CONFIG_FILES src/mpid/ch4/src/mpid_ch4_net_array.c" ;;
    "src/mpid/ch4/include/netmodpre.h") CONFIG_FILES="$CONFIG_FILES src/mpid/ch4/include/netmodpre.h" ;;
    "src/mpid/ch4/include/coll_algo_params.h") CONFIG_FILES="$CONFIG_FILES src/mpid/ch4/include/coll_algo_params.h" ;;
    "src/mpid/ch4/src/ch4_coll_globals_default.c") CONFIG_FILES="$CONFIG_FILES src/mpid/ch4/src/ch4_coll_globals_default.c" ;;
    "src/binding/fortran/use_mpi/mpif90model.h") CONFIG_FILES="$CONFIG_FILES src/binding/fortran/use_mpi/mpif90model.h" ;;
    "src/mpid/ch3/channels/nemesis/include/mpid_nem_net_module_defs.h") CONFIG_FILES="$CONFIG_FILES src/mpid/ch3/channels/nemesis/include/mpid_nem_net_module_defs.h" ;;
    "src/mpid/ch3/channels/nemesis/src/mpid_nem_net_array.c") CONFIG_FILES="$CONFIG_FILES src/mpid/ch3/channels/nemesis/src/mpid_nem_net_array.c" ;;
    "default-2") CONFIG_COMMANDS="$CONFIG_COMMANDS default-2" ;;
    "default-3") CONFIG_COMMANDS="$CONFIG_COMMANDS default-3" ;;
    "default-4") CONFIG_COMMANDS="$CONFIG_COMMANDS default-4" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "examples/Makefile") CONFIG_FILES="$CONFIG_FILES examples/Makefile" ;;
    "test/Makefile") CONFIG_FILES="$CONFIG_FILES test/Makefile" ;;
    "test/commands/Makefile") CONFIG_FILES="$CONFIG_FILES test/commands/Makefile" ;;
    "src/include/mpichinfo.h") CONFIG_FILES="$CONFIG_FILES src/include/mpichinfo.h" ;;
    "mpich-doxygen") CONFIG_FILES="$CONFIG_FILES mpich-doxygen" ;;
    "src/include/mpir_ext.h") CONFIG_FILES="$CONFIG_FILES src/include/mpir_ext.h" ;;
    "src/binding/cxx/mpicxx.h") CONFIG_FILES="$CONFIG_FILES src/binding/cxx/mpicxx.h" ;;
    "src/binding/fortran/mpif_h/mpif.h") CONFIG_FILES="$CONFIG_FILES src/binding/fortran/mpif_h/mpif.h" ;;
    "src/binding/fortran/mpif_h/setbotf.f") CONFIG_FILES="$CONFIG_FILES src/binding/fortran/mpif_h/setbotf.f" ;;
    "src/binding/fortran/mpif_h/setbot.c") CONFIG_FILES="$CONFIG_FILES src/binding/fortran/mpif_h/setbot.c" ;;
    "src/binding/fortran/use_mpi/mpi_sizeofs.f90") CONFIG_FILES="$CONFIG_FILES src/binding/fortran/use_mpi/mpi_sizeofs.f90" ;;
    "src/binding/fortran/use_mpi/mpi_base.f90") CONFIG_FILES="$CONFIG_FILES src/binding/fortran/use_mpi/mpi_base.f90" ;;
    "src/binding/fortran/use_mpi/mpi_constants.f90") CONFIG_FILES="$CONFIG_FILES src/binding/fortran/use_mpi/mpi_constants.f90" ;;
    "src/binding/fortran/use_mpi_f08/mpi_f08_compile_constants.f90") CONFIG_FILES="$CONFIG_FILES src/binding/fortran/use_mpi_f08/mpi_f08_compile_constants.f90" ;;
    "src/binding/fortran/use_mpi_f08/mpi_c_interface_types.f90") CONFIG_FILES="$CONFIG_FILES src/binding/fortran/use_mpi_f08/mpi_c_interface_types.f90" ;;
    "src/packaging/pkgconfig/mpich.pc") CONFIG_FILES="$CONFIG_FILES src/packaging/pkgconfig/mpich.pc" ;;
    "src/packaging/envmods/mpich.module") CONFIG_FILES="$CONFIG_FILES src/packaging/envmods/mpich.module" ;;
    "src/env/mpixxx_opts.conf") CONFIG_FILES="$CONFIG_FILES src/env/mpixxx_opts.conf" ;;
    "src/env/mpicc.sh") CONFIG_FILES="$CONFIG_FILES src/env/mpicc.sh" ;;
    "src/env/mpicc.bash") CONFIG_FILES="$CONFIG_FILES src/env/mpicc.bash" ;;
    "src/env/mpicxx.sh") CONFIG_FILES="$CONFIG_FILES src/env/mpicxx.sh" ;;
    "src/env/mpicxx.bash") CONFIG_FILES="$CONFIG_FILES src/env/mpicxx.bash" ;;
    "src/env/mpif77.sh") CONFIG_FILES="$CONFIG_FILES src/env/mpif77.sh" ;;
    "src/env/mpif77.bash") CONFIG_FILES="$CONFIG_FILES src/env/mpif77.bash" ;;
    "src/env/mpifort.sh") CONFIG_FILES="$CONFIG_FILES src/env/mpifort.sh" ;;
    "src/env/mpifort.bash") CONFIG_FILES="$CONFIG_FILES src/env/mpifort.bash" ;;
    "src/env/parkill") CONFIG_FILES="$CONFIG_FILES src/env/parkill" ;;
    "src/include/mpi.h") CONFIG_FILES="$CONFIG_FILES src/include/mpi.h" ;;
    "doc/design/Makefile") CONFIG_FILES="$CONFIG_FILES doc/design/Makefile" ;;
    "doc/installguide/Makefile") CONFIG_FILES="$CONFIG_FILES doc/installguide/Makefile" ;;
    "doc/logging/Makefile") CONFIG_FILES="$CONFIG_FILES doc/logging/Makefile" ;;
    "doc/refman/Makefile") CONFIG_FILES="$CONFIG_FILES doc/refman/Makefile" ;;
    "doc/userguide/Makefile") CONFIG_FILES="$CONFIG_FILES doc/userguide/Makefile" ;;
    "test/commands/cmdtests") CONFIG_FILES="$CONFIG_FILES test/commands/cmdtests" ;;

  *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp= ac_tmp=
  trap 'exit_status=$?
  : "${ac_tmp:=$tmp}"
  { test ! -d "$ac_tmp" || rm -fr "$ac_tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
ac_tmp=$tmp

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with `./config.status config.h'.
if test -n "$CONFIG_FILES"; then

if $AWK 'BEGIN { getline <"/dev/null" }' </dev/null 2>/dev/null; then
  ac_cs_awk_getline=:
  ac_cs_awk_pipe_init=
  ac_cs_awk_read_file='
      while ((getline aline < (F[key])) > 0)
	print(aline)
      close(F[key])'
  ac_cs_awk_pipe_fini=
else
  ac_cs_awk_getline=false
  ac_cs_awk_pipe_init="print \"cat <<'|#_!!_#|' &&\""
  ac_cs_awk_read_file='
      print "|#_!!_#|"
      print "cat " F[key] " &&"
      '$ac_cs_awk_pipe_init
  # The final `:' finishes the AND list.
  ac_cs_awk_pipe_fini='END { print "|#_!!_#|"; print ":" }'
fi
ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$ac_tmp/subs1.awk" &&
cat >>"$ac_tmp/subs1.awk" <<\_ACAWK &&
F["cc_shlib_conf"]="src/env/cc_shlib.conf"
F["f77_shlib_conf"]="src/env/f77_shlib.conf"
F["fc_shlib_conf"]="src/env/fc_shlib.conf"
F["cxx_shlib_conf"]="src/env/cxx_shlib.conf"
_ACAWK
cat >>"$ac_tmp/subs1.awk" <<\_ACAWK &&
S["am__EXEEXT_FALSE"]=""
S["am__EXEEXT_TRUE"]="#"
S["LTLIBOBJS"]=""
S["LIBOBJS"]=""
S["pkgconfigdir"]="${exec_prefix}/lib/pkgconfig"
S["F08_C_OFFSET"]=""
S["F08_C_COUNT"]=""
S["F08_C_AINT"]=""
S["F08_CXX_LONG_DOUBLE_COMPLEX"]=""
S["F08_CXX_DOUBLE_COMPLEX"]=""
S["F08_CXX_FLOAT_COMPLEX"]=""
S["F08_CXX_BOOL"]=""
S["F08_COUNT"]=""
S["F08_OFFSET"]=""
S["F08_AINT"]=""
S["F08_C_LONG_DOUBLE_COMPLEX"]=""
S["F08_C_DOUBLE_COMPLEX"]=""
S["F08_C_COMPLEX"]=""
S["F08_C_FLOAT_COMPLEX"]=""
S["F08_C_BOOL"]=""
S["F08_UINT64_T"]=""
S["F08_UINT32_T"]=""
S["F08_UINT16_T"]=""
S["F08_UINT8_T"]=""
S["F08_INT64_T"]=""
S["F08_INT32_T"]=""
S["F08_INT16_T"]=""
S["F08_INT8_T"]=""
S["F08_LONG_DOUBLE_INT"]=""
S["F08_2INT"]=""
S["F08_SHORT_INT"]=""
S["F08_LONG_INT"]=""
S["F08_DOUBLE_INT"]=""
S["F08_FLOAT_INT"]=""
S["F08_LONG_LONG"]=""
S["F08_UNSIGNED_LONG_LONG"]=""
S["F08_LONG_LONG_INT"]=""
S["F08_LONG_DOUBLE"]=""
S["F08_DOUBLE"]=""
S["F08_FLOAT"]=""
S["F08_UNSIGNED_LONG"]=""
S["F08_UNSIGNED_INT"]=""
S["F08_LONG"]=""
S["F08_INT"]=""
S["F08_UNSIGNED"]=""
S["F08_UNSIGNED_SHORT"]=""
S["F08_SHORT"]=""
S["F08_WCHAR"]=""
S["F08_UNSIGNED_CHAR"]=""
S["F08_SIGNED_CHAR"]=""
S["F08_CHAR"]=""
S["F08_BYTE"]=""
S["F08_LB"]=""
S["F08_UB"]=""
S["F08_PACKED"]=""
S["F08_COMPLEX32"]=""
S["F08_COMPLEX16"]=""
S["F08_COMPLEX8"]=""
S["F08_REAL16"]=""
S["F08_REAL8"]=""
S["F08_REAL4"]=""
S["F08_INTEGER16"]=""
S["F08_INTEGER8"]=""
S["F08_INTEGER4"]=""
S["F08_INTEGER2"]=""
S["F08_INTEGER1"]=""
S["subdirs"]=" test/mpi"
S["MPIF77_NAME"]="mpif77"
S["MPIF90_NAME"]="mpif90"
S["MPIFORT_NAME"]="mpifort"
S["MPICPP_NAME"]="mpic++"
S["MPICXX_NAME"]="mpicxx"
S["MPICC_NAME"]="mpicc"
S["BUILD_F77_BINDING_FALSE"]="#"
S["BUILD_F77_BINDING_TRUE"]=""
S["BUILD_CXX_BINDING_FALSE"]="#"
S["BUILD_CXX_BINDING_TRUE"]=""
S["MPIU_DLL_SPEC_DEF"]="#define MPIU_DLL_SPEC"
S["MPI_MAX_ERROR_STRING"]="512"
S["MPI_MAX_LIBRARY_VERSION_STRING"]="8192"
S["MPI_MAX_PROCESSOR_NAME"]="128"
S["CMB_STATUS_ALIGNMENT"]="__attribute__((aligned(32)))"
S["CMB_1INT_ALIGNMENT"]="__attribute__((aligned(16)))"
S["MPI_STATUS_SIZE"]="5"
S["SIZEOF_MPI_STATUS"]="20"
S["MPI_F77_COUNT"]="1275070533"
S["MPI_COUNT_DATATYPE"]="0x4c000845"
S["COUNT_KIND"]="8"
S["MPI_COUNT"]="long long"
S["MPI_OFFSET_DATATYPE"]="0x4c000844"
S["FORTRAN_MPI_OFFSET"]="integer*8"
S["MPI_OFFSET_TYPEDEF"]="typedef long long MPI_Offset;"
S["MPI_OFFSET"]="long long"
S["MPI_FINT"]="int"
S["AS"]="as"
S["PAPI_INCLUDE"]=""
S["mmx_copy_s"]=""
S["nemesis_nets_macro_defs"]="#define MPIDI_NEM_TCP 0"
S["nemesis_nets_array_sz"]="1"
S["nemesis_nets_array"]="MPIDI_NEM_TCP"
S["nemesis_nets_func_array"]="&MPIDI_nem_tcp_funcs"
S["nemesis_nets_func_decl"]="MPIDI_nem_tcp_funcs"
S["nemesis_nets_strings"]="\"tcp\""
S["nemesis_nets_dirs"]="tcp"
S["nemesis_networks"]="tcp"
S["ofi_embedded"]=""
S["with_libfabric"]=""
S["ofilib"]=""
S["ofisrcdir"]=""
S["BUILD_PMI_SIMPLE_FALSE"]="#"
S["BUILD_PMI_SIMPLE_TRUE"]=""
S["BUILD_PMI_CRAY_FALSE"]=""
S["BUILD_PMI_CRAY_TRUE"]="#"
S["BUILD_PMI_BGQ_FALSE"]=""
S["BUILD_PMI_BGQ_TRUE"]="#"
S["BUILD_PMI_PMI2_SIMPLE_FALSE"]=""
S["BUILD_PMI_PMI2_SIMPLE_TRUE"]="#"
S["BUILD_PMI_PMI2_FALSE"]=""
S["BUILD_PMI_PMI2_TRUE"]="#"
S["BUILD_PMI_SLURM_FALSE"]=""
S["BUILD_PMI_SLURM_TRUE"]="#"
S["BUILD_PM_UTIL_FALSE"]=""
S["BUILD_PM_UTIL_TRUE"]="#"
S["RSH"]=""
S["SSH"]=""
S["PRIMARY_PM_REMSHELL_FALSE"]=""
S["PRIMARY_PM_REMSHELL_TRUE"]="#"
S["BUILD_PM_REMSHELL_FALSE"]=""
S["BUILD_PM_REMSHELL_TRUE"]="#"
S["PRIMARY_PM_GFORKER_FALSE"]=""
S["PRIMARY_PM_GFORKER_TRUE"]="#"
S["BUILD_PM_GFORKER_FALSE"]=""
S["BUILD_PM_GFORKER_TRUE"]="#"
S["FC_INTEGER_MODEL_MAP"]=" {  2 , 1 , 1 }, {  4 , 2 , 2 }, {  9 , 4 , 4 }, {  18 , 8 , 8 },"
S["FC_ALL_INTEGER_MODELS"]=" 2 , 1, 4 , 2, 9 , 4, 18 , 8,"
S["FC_INTEGER_MODEL"]=" 9"
S["FC_DOUBLE_MODEL"]=" 15 , 307"
S["FC_REAL_MODEL"]=" 6 , 37"
S["BUILD_PM_HYDRA2_FALSE"]=""
S["BUILD_PM_HYDRA2_TRUE"]="#"
S["BUILD_PM_HYDRA_FALSE"]="#"
S["BUILD_PM_HYDRA_TRUE"]=""
S["ucxlib"]=""
S["ucxdir"]=""
S["BUILD_CH4_COLL_TUNING_FALSE"]=""
S["BUILD_CH4_COLL_TUNING_TRUE"]="#"
S["REPLACE_WCTOMB"]="0"
S["REPLACE_UNSETENV"]="0"
S["REPLACE_STRTOD"]="0"
S["REPLACE_SETENV"]="0"
S["REPLACE_REALPATH"]="0"
S["REPLACE_REALLOC"]="0"
S["REPLACE_RANDOM_R"]="0"
S["REPLACE_QSORT_R"]="0"
S["REPLACE_PUTENV"]="0"
S["REPLACE_PTSNAME_R"]="0"
S["REPLACE_PTSNAME"]="0"
S["REPLACE_MKSTEMP"]="0"
S["REPLACE_MBTOWC"]="0"
S["REPLACE_MALLOC"]="0"
S["REPLACE_CANONICALIZE_FILE_NAME"]="0"
S["REPLACE_CALLOC"]="0"
S["HAVE_DECL_UNSETENV"]="1"
S["HAVE_UNLOCKPT"]="1"
S["HAVE_SYS_LOADAVG_H"]="0"
S["HAVE_STRUCT_RANDOM_DATA"]="1"
S["HAVE_STRTOULL"]="1"
S["HAVE_STRTOLL"]="1"
S["HAVE_STRTOD"]="1"
S["HAVE_DECL_SETENV"]="1"
S["HAVE_SETENV"]="1"
S["HAVE_SECURE_GETENV"]="1"
S["HAVE_RPMATCH"]="1"
S["HAVE_REALPATH"]="1"
S["HAVE_RANDOM_R"]="1"
S["HAVE_RANDOM_H"]="1"
S["HAVE_RANDOM"]="1"
S["HAVE_PTSNAME_R"]="1"
S["HAVE_PTSNAME"]="1"
S["HAVE_POSIX_OPENPT"]="1"
S["HAVE_MKSTEMPS"]="1"
S["HAVE_MKSTEMP"]="1"
S["HAVE_MKOSTEMPS"]="1"
S["HAVE_MKOSTEMP"]="1"
S["HAVE_MKDTEMP"]="1"
S["HAVE_GRANTPT"]="1"
S["HAVE_GETSUBOPT"]="1"
S["HAVE_DECL_GETLOADAVG"]="1"
S["HAVE_CANONICALIZE_FILE_NAME"]="1"
S["HAVE_ATOLL"]="1"
S["HAVE__EXIT"]="1"
S["GNULIB_WCTOMB"]="0"
S["GNULIB_UNSETENV"]="0"
S["GNULIB_UNLOCKPT"]="0"
S["GNULIB_SYSTEM_POSIX"]="0"
S["GNULIB_STRTOULL"]="0"
S["GNULIB_STRTOLL"]="0"
S["GNULIB_STRTOD"]="0"
S["GNULIB_SETENV"]="0"
S["GNULIB_SECURE_GETENV"]="0"
S["GNULIB_RPMATCH"]="0"
S["GNULIB_REALPATH"]="0"
S["GNULIB_REALLOC_POSIX"]="0"
S["GNULIB_RANDOM_R"]="0"
S["GNULIB_RANDOM"]="0"
S["GNULIB_QSORT_R"]="0"
S["GNULIB_PUTENV"]="0"
S["GNULIB_PTSNAME_R"]="0"
S["GNULIB_PTSNAME"]="0"
S["GNULIB_POSIX_OPENPT"]="0"
S["GNULIB_MKSTEMPS"]="0"
S["GNULIB_MKSTEMP"]="0"
S["GNULIB_MKOSTEMPS"]="0"
S["GNULIB_MKOSTEMP"]="0"
S["GNULIB_MKDTEMP"]="0"
S["GNULIB_MBTOWC"]="0"
S["GNULIB_MALLOC_POSIX"]="0"
S["GNULIB_GRANTPT"]="0"
S["GNULIB_GETSUBOPT"]="0"
S["GNULIB_GETLOADAVG"]="0"
S["GNULIB_CANONICALIZE_FILE_NAME"]="0"
S["GNULIB_CALLOC_POSIX"]="0"
S["GNULIB_ATOLL"]="0"
S["GNULIB__EXIT"]="0"
S["BSEND_OVERHEAD"]="96"
S["MPI_AINT_DATATYPE"]="0x4c000843"
S["MPI_AINT_FMT_HEX_SPEC"]="%lx"
S["MPI_AINT_FMT_DEC_SPEC"]="%ld"
S["MPI_AINT"]="long"
S["LPMPILIBNAME"]=""
S["ALLOCA"]=""
S["BUILD_COVERAGE_FALSE"]=""
S["BUILD_COVERAGE_TRUE"]="#"
S["GCOV"]="gcov"
S["DISABLE_TAG_SUPPORT"]="#define NO_TAGS_WITH_MODIFIERS 1"
S["MPI_F77_CXX_LONG_DOUBLE_COMPLEX"]="1275076662"
S["MPI_F77_CXX_DOUBLE_COMPLEX"]="1275072565"
S["MPI_F77_CXX_FLOAT_COMPLEX"]="1275070516"
S["MPI_F77_CXX_BOOL"]="1275068723"
S["REQI8"]=""
S["REQI2"]=""
S["REQI1"]=""
S["REQD"]=""
S["SIZEOF_FC_CHARACTER"]="1"
S["SIZEOF_FC_DOUBLE_PRECISION"]="8"
S["SIZEOF_FC_REAL"]="4"
S["SIZEOF_FC_INTEGER"]="4"
S["DLLIMPORT"]=""
S["INTEGER_KIND"]="4"
S["OFFSET_KIND"]="8"
S["ADDRESS_KIND"]="8"
S["WTIME_DOUBLE_TYPE"]="REAL*8"
S["MPI_F77_OFFSET"]="1275070532"
S["MPI_F77_AINT"]="1275070531"
S["MPI_F77_C_LONG_DOUBLE_COMPLEX"]="1275076674"
S["MPI_F77_C_DOUBLE_COMPLEX"]="1275072577"
S["MPI_F77_C_COMPLEX"]="1275070528"
S["MPI_F77_C_FLOAT_COMPLEX"]="1275070528"
S["MPI_F77_C_BOOL"]="1275068735"
S["MPI_F77_UINT64_T"]="1275070526"
S["MPI_F77_UINT32_T"]="1275069501"
S["MPI_F77_UINT16_T"]="1275068988"
S["MPI_F77_UINT8_T"]="1275068731"
S["MPI_F77_INT64_T"]="1275070522"
S["MPI_F77_INT32_T"]="1275069497"
S["MPI_F77_INT16_T"]="1275068984"
S["MPI_F77_INT8_T"]="1275068727"
S["MPI_F77_LONG_DOUBLE_INT"]="-1946157052"
S["MPI_F77_2INT"]="1275070486"
S["MPI_F77_SHORT_INT"]="-1946157053"
S["MPI_F77_LONG_INT"]="-1946157054"
S["MPI_F77_DOUBLE_INT"]="-1946157055"
S["MPI_F77_FLOAT_INT"]="-1946157056"
S["MPI_F77_LONG_LONG"]="1275070473"
S["MPI_F77_LONG_LONG_INT"]="1275070473"
S["MPI_F77_UNSIGNED_LONG_LONG"]="1275070489"
S["MPI_F77_LONG_DOUBLE"]="1275072524"
S["MPI_F77_DOUBLE"]="1275070475"
S["MPI_F77_FLOAT"]="1275069450"
S["MPI_F77_UNSIGNED_LONG"]="1275070472"
S["MPI_F77_LONG"]="1275070471"
S["MPI_F77_INT"]="1275069445"
S["MPI_F77_UNSIGNED"]="1275069446"
S["MPI_F77_UNSIGNED_SHORT"]="1275068932"
S["MPI_F77_SHORT"]="1275068931"
S["MPI_F77_WCHAR"]="1275069454"
S["MPI_F77_UNSIGNED_CHAR"]="1275068674"
S["MPI_F77_SIGNED_CHAR"]="1275068696"
S["MPI_F77_CHAR"]="1275068673"
S["F77_COMPLEX32"]="1275076652"
S["F77_COMPLEX16"]="1275072554"
S["F77_COMPLEX8"]="1275070504"
S["F77_REAL16"]="1275072555"
S["F77_REAL8"]="1275070505"
S["F77_REAL4"]="1275069479"
S["F77_INTEGER16"]="MPI_DATATYPE_NULL"
S["F77_INTEGER8"]="1275070513"
S["F77_INTEGER4"]="1275069488"
S["F77_INTEGER2"]="1275068975"
S["F77_INTEGER1"]="1275068717"
S["MPI_F77_BYTE"]="1275068685"
S["MPI_F77_LB"]="1275068432"
S["MPI_F77_UB"]="1275068433"
S["MPI_F77_PACKED"]="1275068687"
S["MPI_2DOUBLE_COMPLEX"]="1275076645"
S["MPI_2COMPLEX"]="1275072548"
S["MPI_2DOUBLE_PRECISION"]="1275072547"
S["MPI_DOUBLE_COMPLEX"]="1275072546"
S["MPI_2REAL"]="1275070497"
S["MPI_2INTEGER"]="1275070496"
S["MPI_DOUBLE_PRECISION"]="1275070495"
S["MPI_COMPLEX"]="1275070494"
S["MPI_LOGICAL"]="1275069469"
S["MPI_REAL"]="1275069468"
S["MPI_INTEGER"]="1275069467"
S["MPI_CHARACTER"]="1275068698"
S["MPI_C_LONG_DOUBLE_COMPLEX"]="0x4c002042"
S["MPI_C_DOUBLE_COMPLEX"]="0x4c001041"
S["MPI_C_FLOAT_COMPLEX"]="0x4c000840"
S["MPI_C_BOOL"]="0x4c00013f"
S["MPI_UINT64_T"]="0x4c00083e"
S["MPI_UINT32_T"]="0x4c00043d"
S["MPI_UINT16_T"]="0x4c00023c"
S["MPI_UINT8_T"]="0x4c00013b"
S["MPI_INT64_T"]="0x4c00083a"
S["MPI_INT32_T"]="0x4c000439"
S["MPI_INT16_T"]="0x4c000238"
S["MPI_INT8_T"]="0x4c000137"
S["MPI_INTEGER16"]="MPI_DATATYPE_NULL"
S["MPI_INTEGER8"]="0x4c000831"
S["MPI_INTEGER4"]="0x4c000430"
S["MPI_INTEGER2"]="0x4c00022f"
S["MPI_INTEGER1"]="0x4c00012d"
S["MPI_COMPLEX32"]="0x4c00202c"
S["MPI_COMPLEX16"]="0x4c00102a"
S["MPI_COMPLEX8"]="0x4c000828"
S["MPI_REAL16"]="0x4c00102b"
S["MPI_REAL8"]="0x4c000829"
S["MPI_REAL4"]="0x4c000427"
S["MPI_UNSIGNED_LONG_LONG"]="0x4c000819"
S["MPI_SIGNED_CHAR"]="0x4c000118"
S["MPI_LONG_DOUBLE_INT"]="0x8c000004"
S["MPI_2INT"]="0x4c000816"
S["MPI_SHORT_INT"]="0x8c000003"
S["MPI_LONG_INT"]="0x8c000002"
S["MPI_DOUBLE_INT"]="0x8c000001"
S["MPI_FLOAT_INT"]="0x8c000000"
S["MPI_UB"]="0x4c000011"
S["MPI_LB"]="0x4c000010"
S["MPI_PACKED"]="0x4c00010f"
S["MPI_WCHAR"]="0x4c00040e"
S["MPI_BYTE"]="0x4c00010d"
S["MPI_LONG_DOUBLE"]="0x4c00100c"
S["MPI_DOUBLE"]="0x4c00080b"
S["MPI_FLOAT"]="0x4c00040a"
S["MPI_LONG_LONG"]="0x4c000809"
S["MPI_UNSIGNED_LONG"]="0x4c000808"
S["MPI_LONG"]="0x4c000807"
S["MPI_UNSIGNED_INT"]="0x4c000406"
S["MPI_INT"]="0x4c000405"
S["MPI_UNSIGNED_SHORT"]="0x4c000204"
S["MPI_SHORT"]="0x4c000203"
S["MPI_UNSIGNED_CHAR"]="0x4c000102"
S["MPI_CHAR"]="0x4c000101"
S["DOCTEXT"]="false"
S["BUILD_NAMEPUB_PMI_FALSE"]="#"
S["BUILD_NAMEPUB_PMI_TRUE"]=""
S["BUILD_NAMEPUB_FILE_FALSE"]=""
S["BUILD_NAMEPUB_FILE_TRUE"]="#"
S["BUILD_DEBUGGER_DLL_FALSE"]=""
S["BUILD_DEBUGGER_DLL_TRUE"]="#"
S["SHLIB_EXT"]=".so"
S["BUILD_BASH_SCRIPTS_FALSE"]="#"
S["BUILD_BASH_SCRIPTS_TRUE"]=""
S["BASH_SHELL"]="/usr/bin/bash"
S["SET_CFLAGS"]="CFLAGS="
S["VPATH"]="VPATH=.:${srcdir}"
S["MAKE"]="make"
S["XARGS_NODATA_OPT"]="-r"
S["KILLALL"]="killall"
S["AR_FLAGS"]="cr"
S["PERL"]="/usr/bin/perl"
S["bindings"]=" f77 f90 cxx"
S["MPIR_CXX_LONG_DOUBLE_COMPLEX"]="0x4c002036"
S["MPIR_CXX_DOUBLE_COMPLEX"]="0x4c001035"
S["MPIR_CXX_COMPLEX"]="0x4c000834"
S["MPIR_CXX_BOOL"]="0x4c000133"
S["FORTRAN_BINDING"]="1"
S["INCLUDE_MPICXX_H"]="#include \"mpicxx.h\""
S["GNUCXX_MINORVERSION"]="8"
S["GNUCXX_VERSION"]="4"
S["HAVE_CXX_EXCEPTIONS"]="1"
S["modincdir"]="${prefix}/include"
S["FC_OTHER_LIBS"]=""
S["FCCPP"]=""
S["FCINCFLAG"]="-I"
S["FCINC"]="-I"
S["MPI_C_INTERFACE_CDESC_NAME"]="mpi_c_interface_cdesc"
S["MPI_C_INTERFACE_TYPES_NAME"]="mpi_c_interface_types"
S["MPI_C_INTERFACE_GLUE_NAME"]="mpi_c_interface_glue"
S["MPI_C_INTERFACE_NOBUF_NAME"]="mpi_c_interface_nobuf"
S["MPI_C_INTERFACE_NAME"]="mpi_c_interface"
S["PMPI_F08_NAME"]="pmpi_f08"
S["MPI_F08_COMPILE_CONSTANTS_NAME"]="mpi_f08_compile_constants"
S["MPI_F08_TYPES_NAME"]="mpi_f08_types"
S["MPI_F08_CALLBACKS_NAME"]="mpi_f08_callbacks"
S["MPI_F08_LINK_CONSTANTS_NAME"]="mpi_f08_link_constants"
S["MPI_F08_NAME"]="mpi_f08"
S["MPIBASEMODNAME"]="mpi_base"
S["MPISIZEOFMODNAME"]="mpi_sizeofs"
S["MPICONSTMODNAME"]="mpi_constants"
S["MPIMODNAME"]="mpi"
S["FCMODINCSPEC"]=""
S["FCMODOUTFLAG"]="-J"
S["FCMODINCFLAG"]="-I"
S["FC_WORK_FILES_ARG"]=""
S["FCMODEXT"]="mod"
S["FCEXT"]="f90"
S["BUILD_F08_BINDING_FALSE"]=""
S["BUILD_F08_BINDING_TRUE"]="#"
S["F77CPP"]=""
S["MPIFPMPI"]=",PMPI_WTIME,PMPI_WTICK"
S["F77_LIBDIR_LEADER"]="-L"
S["F77_INCDIR"]="-I"
S["F77_OTHER_LIBS"]=""
S["F77_NAME_MANGLE"]="F77_NAME_LOWER_USCORE"
S["FILE"]=""
S["FLIBS"]=" -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5 -L/usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib/"\
"gcc/x86_64-redhat-linux/4.8.5/../../.. -lgfortran -lm -lquadmath"
S["WRAPPER_RPATH_LDFLAGS"]="-Wl,-rpath -Wl,${exec_prefix}/lib"
S["C_LINKPATH_SHL"]=""
S["pm_name"]="hydra"
S["BUILD_ROMIO_FALSE"]="#"
S["BUILD_ROMIO_TRUE"]=""
S["HAVE_ROMIO"]="#include \"mpio.h\""
S["netloclibdir"]=""
S["use_embedded_hwloc_FALSE"]="#"
S["use_embedded_hwloc_TRUE"]=""
S["have_hwloc_FALSE"]="#"
S["have_hwloc_TRUE"]=""
S["FOUND_XZ_FALSE"]=""
S["FOUND_XZ_TRUE"]="#"
S["BUILD_MPITOOLS_FALSE"]=""
S["BUILD_MPITOOLS_TRUE"]="#"
S["BUILD_NETLOCSCOTCH_FALSE"]=""
S["BUILD_NETLOCSCOTCH_TRUE"]="#"
S["BUILD_NETLOC_FALSE"]=""
S["BUILD_NETLOC_TRUE"]="#"
S["HWLOC_HAVE_CXX_FALSE"]=""
S["HWLOC_HAVE_CXX_TRUE"]="#"
S["HWLOC_XML_LIBXML_BUILD_STATIC_FALSE"]=""
S["HWLOC_XML_LIBXML_BUILD_STATIC_TRUE"]="#"
S["HWLOC_GL_BUILD_STATIC_FALSE"]=""
S["HWLOC_GL_BUILD_STATIC_TRUE"]="#"
S["HWLOC_NVML_BUILD_STATIC_FALSE"]=""
S["HWLOC_NVML_BUILD_STATIC_TRUE"]="#"
S["HWLOC_CUDA_BUILD_STATIC_FALSE"]=""
S["HWLOC_CUDA_BUILD_STATIC_TRUE"]="#"
S["HWLOC_OPENCL_BUILD_STATIC_FALSE"]=""
S["HWLOC_OPENCL_BUILD_STATIC_TRUE"]="#"
S["HWLOC_PCI_BUILD_STATIC_FALSE"]=""
S["HWLOC_PCI_BUILD_STATIC_TRUE"]="#"
S["HWLOC_HAVE_PLUGINS_FALSE"]=""
S["HWLOC_HAVE_PLUGINS_TRUE"]="#"
S["HWLOC_HAVE_X86_CPUID_FALSE"]="#"
S["HWLOC_HAVE_X86_CPUID_TRUE"]=""
S["HWLOC_HAVE_X86_64_FALSE"]="#"
S["HWLOC_HAVE_X86_64_TRUE"]=""
S["HWLOC_HAVE_X86_32_FALSE"]=""
S["HWLOC_HAVE_X86_32_TRUE"]="#"
S["HWLOC_HAVE_X86_FALSE"]="#"
S["HWLOC_HAVE_X86_TRUE"]=""
S["HWLOC_HAVE_MINGW32_FALSE"]=""
S["HWLOC_HAVE_MINGW32_TRUE"]="#"
S["HWLOC_HAVE_WINDOWS_FALSE"]=""
S["HWLOC_HAVE_WINDOWS_TRUE"]="#"
S["HWLOC_HAVE_HPUX_FALSE"]=""
S["HWLOC_HAVE_HPUX_TRUE"]="#"
S["HWLOC_HAVE_AIX_FALSE"]=""
S["HWLOC_HAVE_AIX_TRUE"]="#"
S["HWLOC_HAVE_SOLARIS_FALSE"]=""
S["HWLOC_HAVE_SOLARIS_TRUE"]="#"
S["HWLOC_HAVE_NETBSD_FALSE"]=""
S["HWLOC_HAVE_NETBSD_TRUE"]="#"
S["HWLOC_HAVE_FREEBSD_FALSE"]=""
S["HWLOC_HAVE_FREEBSD_TRUE"]="#"
S["HWLOC_HAVE_DARWIN_FALSE"]=""
S["HWLOC_HAVE_DARWIN_TRUE"]="#"
S["HWLOC_HAVE_IRIX_FALSE"]=""
S["HWLOC_HAVE_IRIX_TRUE"]="#"
S["HWLOC_HAVE_BGQ_FALSE"]=""
S["HWLOC_HAVE_BGQ_TRUE"]="#"
S["HWLOC_HAVE_LINUX_FALSE"]="#"
S["HWLOC_HAVE_LINUX_TRUE"]=""
S["HWLOC_INSTALL_DOXYGEN_FALSE"]=""
S["HWLOC_INSTALL_DOXYGEN_TRUE"]="#"
S["HWLOC_BUILD_README_FALSE"]=""
S["HWLOC_BUILD_README_TRUE"]="#"
S["HWLOC_BUILD_DOXYGEN_FALSE"]=""
S["HWLOC_BUILD_DOXYGEN_TRUE"]="#"
S["HWLOC_HAVE_USER32_FALSE"]=""
S["HWLOC_HAVE_USER32_TRUE"]="#"
S["HWLOC_HAVE_BUNZIPP_FALSE"]="#"
S["HWLOC_HAVE_BUNZIPP_TRUE"]=""
S["HWLOC_HAVE_NVML_FALSE"]=""
S["HWLOC_HAVE_NVML_TRUE"]="#"
S["HWLOC_HAVE_OPENCL_FALSE"]=""
S["HWLOC_HAVE_OPENCL_TRUE"]="#"
S["HWLOC_HAVE_PCIACCESS_FALSE"]=""
S["HWLOC_HAVE_PCIACCESS_TRUE"]="#"
S["HWLOC_HAVE_CAIRO_FALSE"]=""
S["HWLOC_HAVE_CAIRO_TRUE"]="#"
S["HWLOC_HAVE_LIBXML2_FALSE"]=""
S["HWLOC_HAVE_LIBXML2_TRUE"]="#"
S["HWLOC_HAVE_CUDART_FALSE"]=""
S["HWLOC_HAVE_CUDART_TRUE"]="#"
S["HWLOC_HAVE_GL_FALSE"]=""
S["HWLOC_HAVE_GL_TRUE"]="#"
S["HWLOC_HAVE_CUDA_FALSE"]=""
S["HWLOC_HAVE_CUDA_TRUE"]="#"
S["HWLOC_HAVE_LIBIBVERBS_FALSE"]=""
S["HWLOC_HAVE_LIBIBVERBS_TRUE"]="#"
S["HWLOC_HAVE_LINUX_LIBNUMA_FALSE"]=""
S["HWLOC_HAVE_LINUX_LIBNUMA_TRUE"]="#"
S["HWLOC_HAVE_PTHREAD_FALSE"]=""
S["HWLOC_HAVE_PTHREAD_TRUE"]="#"
S["HWLOC_HAVE_SCHED_SETAFFINITY_FALSE"]="#"
S["HWLOC_HAVE_SCHED_SETAFFINITY_TRUE"]=""
S["HWLOC_HAVE_OPENAT_FALSE"]="#"
S["HWLOC_HAVE_OPENAT_TRUE"]=""
S["HWLOC_HAVE_MS_LIB_FALSE"]=""
S["HWLOC_HAVE_MS_LIB_TRUE"]="#"
S["HWLOC_HAVE_GCC_FALSE"]="#"
S["HWLOC_HAVE_GCC_TRUE"]=""
S["HWLOC_BUILD_STANDALONE_FALSE"]=""
S["HWLOC_BUILD_STANDALONE_TRUE"]="#"
S["HWLOC_EMBEDDED_LIBS"]="-lm "
S["HWLOC_EMBEDDED_LDADD"]="$(HWLOC_top_builddir)/hwloc/libhwloc_embedded.la"
S["HWLOC_EMBEDDED_CPPFLAGS"]="-I$(HWLOC_top_builddir)/include -I$(HWLOC_top_srcdir)/include"
S["HWLOC_EMBEDDED_CFLAGS"]=" "
S["HWLOC_LIBS_PRIVATE"]=" -lpthread"
S["HWLOC_LIBS"]=""
S["HWLOC_LDFLAGS"]=""
S["HWLOC_CPPFLAGS"]="-I$(HWLOC_top_builddir)/include -I$(HWLOC_top_srcdir)/include"
S["HWLOC_CFLAGS"]="-fvisibility=hidden  "
S["HWLOC_REQUIRES"]=""
S["HWLOC_PLUGINS_DIR"]="$(libdir)/hwloc"
S["HWLOC_PLUGINS_PATH"]="$(libdir)/hwloc"
S["HWLOC_HAVE_LIBXML2"]="0"
S["HWLOC_LIBXML2_LIBS"]=""
S["HWLOC_LIBXML2_CFLAGS"]=""
S["HWLOC_GL_LIBS"]=""
S["HWLOC_X11_LIBS"]=""
S["HWLOC_X11_CPPFLAGS"]=""
S["X_EXTRA_LIBS"]=""
S["X_LIBS"]=""
S["X_PRE_LIBS"]=""
S["X_CFLAGS"]=""
S["XMKMF"]=""
S["HWLOC_HAVE_NVML"]="0"
S["HWLOC_NVML_LIBS"]=""
S["HWLOC_CUDA_LIBS"]=""
S["HWLOC_HAVE_OPENCL"]="0"
S["HWLOC_OPENCL_LDFLAGS"]=""
S["HWLOC_OPENCL_LIBS"]=""
S["HWLOC_OPENCL_CFLAGS"]=""
S["HWLOC_PCIACCESS_LIBS"]=""
S["HWLOC_PCIACCESS_CFLAGS"]=""
S["PKG_CONFIG"]="/usr/bin/pkg-config"
S["BASH"]="/bin/sh"
S["HWLOC_MS_LIB"]=""
S["HWLOC_MS_LIB_ARCH"]="X64"
S["HWLOC_RELEASE_DATE"]="Unreleased developer copy"
S["HWLOC_VERSION"]="2.0.1rc2-git"
S["HWLOC_top_srcdir"]="/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/src/hwloc"
S["HWLOC_top_builddir"]="/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/src/hwloc"
S["hwloclib"]="$(HWLOC_top_builddir)/hwloc/libhwloc_embedded.la"
S["hwloclibdir"]=""
S["hwlocsrcdir"]="src/hwloc"
S["VISIBILITY_CFLAGS"]="-fvisibility=hidden"
S["BUILD_PROFILING_LIB_FALSE"]=""
S["BUILD_PROFILING_LIB_TRUE"]="#"
S["zmlib"]=""
S["zmlibdir"]=""
S["zmsrcdir"]=""
S["ZMLIBNAME"]="zm"
S["opalib"]="src/openpa/src/libopa.la"
S["opalibdir"]=""
S["opasrcdir"]="src/openpa"
S["OPALIBNAME"]="opa"
S["mpllib"]="src/mpl/libmpl.la"
S["mpllibdir"]=""
S["mplsrcdir"]="src/mpl"
S["MPLLIBNAME"]="mpl"
S["BUILD_LOGGING_RLOG_FALSE"]=""
S["BUILD_LOGGING_RLOG_TRUE"]="#"
S["HAVE_ERROR_CHECKING"]="1"
S["MPIFCLIBNAME"]="mpifort"
S["MPICXXLIBNAME"]="mpicxx"
S["PMPILIBNAME"]="pmpi"
S["MPILIBNAME"]="mpi"
S["BUILD_CH3_UTIL_SOCK_FALSE"]=""
S["BUILD_CH3_UTIL_SOCK_TRUE"]="#"
S["BUILD_CH3_SOCK_FALSE"]=""
S["BUILD_CH3_SOCK_TRUE"]="#"
S["BUILD_MPID_COMMON_SCHED_FALSE"]="#"
S["BUILD_MPID_COMMON_SCHED_TRUE"]=""
S["BUILD_MPID_COMMON_THREAD_FALSE"]="#"
S["BUILD_MPID_COMMON_THREAD_TRUE"]=""
S["BUILD_NEMESIS_NETMOD_MXM_FALSE"]=""
S["BUILD_NEMESIS_NETMOD_MXM_TRUE"]="#"
S["BUILD_NEMESIS_NETMOD_TCP_FALSE"]="#"
S["BUILD_NEMESIS_NETMOD_TCP_TRUE"]=""
S["BUILD_NEMESIS_NETMOD_LLC_FALSE"]=""
S["BUILD_NEMESIS_NETMOD_LLC_TRUE"]="#"
S["BUILD_NEMESIS_NETMOD_PORTALS4_FALSE"]=""
S["BUILD_NEMESIS_NETMOD_PORTALS4_TRUE"]="#"
S["BUILD_NEMESIS_NETMOD_OFI_FALSE"]=""
S["BUILD_NEMESIS_NETMOD_OFI_TRUE"]="#"
S["BUILD_MPID_COMMON_SHM_FALSE"]="#"
S["BUILD_MPID_COMMON_SHM_TRUE"]=""
S["BUILD_CH3_NEMESIS_FALSE"]="#"
S["BUILD_CH3_NEMESIS_TRUE"]=""
S["channel_name"]="nemesis"
S["BUILD_CH3_UTIL_FTB_FALSE"]=""
S["BUILD_CH3_UTIL_FTB_TRUE"]="#"
S["BUILD_CH3_FALSE"]="#"
S["BUILD_CH3_TRUE"]=""
S["BUILD_CH4_NETMOD_OFI_FALSE"]=""
S["BUILD_CH4_NETMOD_OFI_TRUE"]="#"
S["BUILD_MPID_COMMON_BC_FALSE"]=""
S["BUILD_MPID_COMMON_BC_TRUE"]="#"
S["BUILD_SHM_POSIX_FALSE"]=""
S["BUILD_SHM_POSIX_TRUE"]="#"
S["BUILD_HCOLL_FALSE"]=""
S["BUILD_HCOLL_TRUE"]="#"
S["BUILD_CH4_NETMOD_STUBNM_FALSE"]=""
S["BUILD_CH4_NETMOD_STUBNM_TRUE"]="#"
S["BUILD_CH4_NETMOD_PORTALS4_FALSE"]=""
S["BUILD_CH4_NETMOD_PORTALS4_TRUE"]="#"
S["BUILD_FC_BINDING_FALSE"]="#"
S["BUILD_FC_BINDING_TRUE"]=""
S["BUILD_SHM_STUBSHM_FALSE"]=""
S["BUILD_SHM_STUBSHM_TRUE"]="#"
S["BUILD_CH4_NETMOD_UCX_FALSE"]=""
S["BUILD_CH4_NETMOD_UCX_TRUE"]="#"
S["ch4_netmod_exscan_params_decl"]=""
S["ch4_netmod_scan_params_decl"]=""
S["ch4_netmod_reduce_scatter_block_params_decl"]=""
S["ch4_netmod_reduce_scatter_params_decl"]=""
S["ch4_netmod_scatterv_params_decl"]=""
S["ch4_netmod_scatter_params_decl"]=""
S["ch4_netmod_gatherv_params_decl"]=""
S["ch4_netmod_gather_params_decl"]=""
S["ch4_netmod_allgatherv_params_decl"]=""
S["ch4_netmod_allgather_params_decl"]=""
S["ch4_netmod_alltoallw_params_decl"]=""
S["ch4_netmod_alltoallv_params_decl"]=""
S["ch4_netmod_alltoall_params_decl"]=""
S["ch4_netmod_allreduce_params_decl"]=""
S["ch4_netmod_reduce_params_decl"]=""
S["ch4_netmod_bcast_params_decl"]=""
S["ch4_netmod_barrier_params_decl"]=""
S["ch4_netmod_op_decl"]=""
S["ch4_netmod_addr_decl"]=""
S["ch4_netmod_win_decl"]=""
S["ch4_netmod_dt_decl"]=""
S["ch4_netmod_comm_decl"]=""
S["ch4_netmod_request_decl"]=""
S["ch4_netmod_amrequest_decl"]=""
S["ch4_netmod_coll_params_include"]=""
S["ch4_netmod_coll_globals_default"]=""
S["ch4_netmod_pre_include"]=""
S["ch4_nets_strings"]=""
S["ch4_nets_native_func_array"]=""
S["ch4_nets_func_array"]=""
S["ch4_nets_native_func_decl"]=""
S["ch4_nets_func_decl"]=""
S["ch4_nets_array_sz"]=""
S["ch4_nets_array"]=""
S["ch4_netmods"]=""
S["device_name"]="ch3"
S["BUILD_CH4_FALSE"]=""
S["BUILD_CH4_TRUE"]="#"
S["DEVICE"]="ch3:nemesis"
S["master_top_srcdir"]="/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3"
S["master_top_builddir"]="/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3"
S["ac_ct_F77"]=""
S["FFLAGS"]="  -O2"
S["F77"]="gfortran"
S["INSTALL_MPIF77_FALSE"]=""
S["INSTALL_MPIF77_TRUE"]="#"
S["ac_ct_FC"]="gfortran"
S["FCFLAGS"]="  -O2"
S["FC"]="gfortran"
S["CXXCPP"]="g++ -E"
S["am__fastdepCXX_FALSE"]="#"
S["am__fastdepCXX_TRUE"]=""
S["CXXDEPMODE"]="depmode=gcc3"
S["ac_ct_CXX"]="g++"
S["CXXFLAGS"]="  -O2"
S["CXX"]="g++"
S["INTERLIB_DEPS"]="yes"
S["LT_SYS_LIBRARY_PATH"]=""
S["OTOOL64"]=""
S["OTOOL"]=""
S["LIPO"]=""
S["NMEDIT"]=""
S["DSYMUTIL"]=""
S["MANIFEST_TOOL"]=":"
S["RANLIB"]="ranlib"
S["DLLTOOL"]="false"
S["OBJDUMP"]="objdump"
S["LN_S"]="ln -s"
S["NM"]="/usr/bin/nm -B"
S["ac_ct_DUMPBIN"]=""
S["DUMPBIN"]=""
S["LD"]="/usr/bin/ld -m elf_x86_64"
S["FGREP"]="/usr/bin/grep -F"
S["SED"]="/usr/bin/sed"
S["LIBTOOL"]="$(SHELL) $(top_builddir)/libtool"
S["ac_ct_AR"]="ar"
S["AR"]="ar"
S["MAINT"]=""
S["MAINTAINER_MODE_FALSE"]="#"
S["MAINTAINER_MODE_TRUE"]=""
S["AM_BACKSLASH"]="\\"
S["AM_DEFAULT_VERBOSITY"]="0"
S["AM_DEFAULT_V"]="$(AM_DEFAULT_VERBOSITY)"
S["AM_V"]="$(V)"
S["am__fastdepCC_FALSE"]="#"
S["am__fastdepCC_TRUE"]=""
S["CCDEPMODE"]="depmode=gcc3"
S["am__nodep"]="_no"
S["AMDEPBACKSLASH"]="\\"
S["AMDEP_FALSE"]="#"
S["AMDEP_TRUE"]=""
S["am__quote"]=""
S["am__include"]="include"
S["DEPDIR"]=".deps"
S["am__untar"]="$${TAR-tar} xf -"
S["am__tar"]="$${TAR-tar} chof - \"$$tardir\""
S["AMTAR"]="$${TAR-tar}"
S["am__leading_dot"]="."
S["SET_MAKE"]="MAKE=make"
S["AWK"]="gawk"
S["mkdir_p"]="$(MKDIR_P)"
S["MKDIR_P"]="mkdir -p"
S["INSTALL_STRIP_PROGRAM"]="$(install_sh) -c -s"
S["STRIP"]="strip"
S["install_sh"]="${SHELL} /home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/confdb/install-sh"
S["MAKEINFO"]="${SHELL} /home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/confdb/missing makeinfo"
S["AUTOHEADER"]="${SHELL} /home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/confdb/missing autoheader"
S["AUTOMAKE"]="${SHELL} /home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/confdb/missing automake-1.15"
S["AUTOCONF"]="${SHELL} /home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/confdb/missing autoconf"
S["ACLOCAL"]="${SHELL} /home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/confdb/missing aclocal-1.15"
S["VERSION"]="3.3rc1"
S["PACKAGE"]="mpich"
S["CYGPATH_W"]="echo"
S["am__isrc"]=""
S["INSTALL_DATA"]="${INSTALL} -m 644"
S["INSTALL_SCRIPT"]="${INSTALL}"
S["INSTALL_PROGRAM"]="${INSTALL}"
S["EGREP"]="/usr/bin/grep -E"
S["GREP"]="/usr/bin/grep"
S["CPP"]="gcc -E"
S["OBJEXT"]="o"
S["EXEEXT"]=""
S["ac_ct_CC"]="gcc"
S["CPPFLAGS"]="  -I/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/src/mpl/include -I/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/src/"\
"mpl/include -I/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/src/openpa/src -I/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich"\
"-3.3/src/openpa/src -D_REENTRANT -I/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/src/mpi/romio/include"
S["LDFLAGS"]=""
S["CFLAGS"]="   -O2"
S["CC"]="gcc -std=gnu99"
S["target_os"]="linux-gnu"
S["target_vendor"]="pc"
S["target_cpu"]="x86_64"
S["target"]="x86_64-pc-linux-gnu"
S["host_os"]="linux-gnu"
S["host_vendor"]="pc"
S["host_cpu"]="x86_64"
S["host"]="x86_64-pc-linux-gnu"
S["build_os"]="linux-gnu"
S["build_vendor"]="pc"
S["build_cpu"]="x86_64"
S["build"]="x86_64-pc-linux-gnu"
S["enable_wrapper_rpath"]="yes"
S["ABIVERSIONFLAGS"]="-version-info $(ABIVERSION)"
S["MPICHLIB_FCFLAGS"]=""
S["MPICHLIB_FFLAGS"]=""
S["MPICHLIB_CXXFLAGS"]=""
S["MPICHLIB_CPPFLAGS"]=""
S["MPICHLIB_CFLAGS"]=""
S["MPICH_MPIFORT_LIBS"]=""
S["MPICH_MPIFORT_LDFLAGS"]=""
S["MPICH_MPIFORT_FCFLAGS"]=""
S["MPICH_MPIFORT_CPPFLAGS"]=""
S["MPICH_MPIF77_LIBS"]=""
S["MPICH_MPIF77_LDFLAGS"]=""
S["MPICH_MPIF77_FFLAGS"]=""
S["MPICH_MPIF77_CPPFLAGS"]=""
S["MPICH_MPICXX_LIBS"]=""
S["MPICH_MPICXX_LDFLAGS"]=""
S["MPICH_MPICXX_CXXFLAGS"]=""
S["MPICH_MPICXX_CPPFLAGS"]=""
S["MPICH_MPICC_LIBS"]=""
S["MPICH_MPICC_LDFLAGS"]=""
S["MPICH_MPICC_CFLAGS"]=""
S["MPICH_MPICC_CPPFLAGS"]=""
S["WRAPPER_EXTRA_LIBS"]=""
S["WRAPPER_LIBS"]="-lm   -lpthread  -lrt "
S["WRAPPER_LDFLAGS"]=""
S["WRAPPER_FCFLAGS"]=""
S["WRAPPER_FFLAGS"]=""
S["WRAPPER_CXXFLAGS"]=""
S["WRAPPER_CPPFLAGS"]=""
S["WRAPPER_CFLAGS"]=""
S["USER_EXTRA_LIBS"]=""
S["USER_LIBS"]=""
S["USER_LDFLAGS"]=""
S["USER_FCFLAGS"]=""
S["USER_FFLAGS"]=""
S["USER_CXXFLAGS"]=""
S["USER_CPPFLAGS"]=""
S["USER_CFLAGS"]=""
S["CONFIGURE_ARGUMENTS"]=" '--prefix=/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/mpich_install/'"
S["ABIVERSION"]="0:0:0"
S["MPICH_CUSTOM_STRING"]=""
S["MPICH_NUMVERSION"]="30300201"
S["libmpi_so_version"]="0:0:0"
S["MPICH_RELEASE_DATE"]="Fri Nov  9 08:53:12 CST 2018"
S["MPICH_VERSION"]="3.3rc1"
S["CONFIGURE_ARGS_CLEAN"]="--prefix=/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/mpich_install/"
S["target_alias"]=""
S["host_alias"]=""
S["build_alias"]=""
S["LIBS"]=""
S["ECHO_T"]=""
S["ECHO_N"]="-n"
S["ECHO_C"]=""
S["DEFS"]="-DHAVE_CONFIG_H"
S["mandir"]="${datarootdir}/man"
S["localedir"]="${datarootdir}/locale"
S["libdir"]="${exec_prefix}/lib"
S["psdir"]="${docdir}"
S["pdfdir"]="${docdir}"
S["dvidir"]="${docdir}"
S["htmldir"]="${docdir}"
S["infodir"]="${datarootdir}/info"
S["docdir"]="${datarootdir}/doc/${PACKAGE_TARNAME}"
S["oldincludedir"]="/usr/include"
S["includedir"]="${prefix}/include"
S["localstatedir"]="${prefix}/var"
S["sharedstatedir"]="${prefix}/com"
S["sysconfdir"]="${prefix}/etc"
S["datadir"]="${datarootdir}"
S["datarootdir"]="${prefix}/share"
S["libexecdir"]="${exec_prefix}/libexec"
S["sbindir"]="${exec_prefix}/sbin"
S["bindir"]="${exec_prefix}/bin"
S["program_transform_name"]="s,x,x,"
S["prefix"]="/home/gavahi/ics-2020/cryptMPI_2022/MPICH/cryptMPI-mpich-3.3/mpich_install"
S["exec_prefix"]="${prefix}"
S["PACKAGE_URL"]="http://www.mpich.org/"
S["PACKAGE_BUGREPORT"]="discuss@mpich.org"
S["PACKAGE_STRING"]="MPICH 3.3rc1"
S["PACKAGE_VERSION"]="3.3rc1"
S["PACKAGE_TARNAME"]="mpich"
S["PACKAGE_NAME"]="MPICH"
S["PATH_SEPARATOR"]=":"
S["SHELL"]="/bin/sh"
_ACAWK
cat >>"$ac_tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""
  $ac_cs_awk_pipe_init
}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }
  if (nfields == 3 && !substed) {
    key = field[2]
    if (F[key] != "" && line ~ /^[	 ]*@.*@[	 ]*$/) {
      $ac_cs_awk_read_file
      next
    }
  }
  print line
}
$ac_cs_awk_pipe_fini
_ACAWK
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$ac_tmp/subs1.awk" > "$ac_tmp/subs.awk" \
  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
fi # test -n "$CONFIG_FILES"

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with `./config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$ac_tmp/defines.awk" <<\_ACAWK ||
BEGIN {
D["PACKAGE_NAME"]=" \"MPICH\""
D["PACKAGE_TARNAME"]=" \"mpich\""
D["PACKAGE_VERSION"]=" \"3.3rc1\""
D["PACKAGE_STRING"]=" \"MPICH 3.3rc1\""
D["PACKAGE_BUGREPORT"]=" \"discuss@mpich.org\""
D["PACKAGE_URL"]=" \"http://www.mpich.org/\""
D["STDC_HEADERS"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_MEMORY_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["__EXTENSIONS__"]=" 1"
D["_ALL_SOURCE"]=" 1"
D["_GNU_SOURCE"]=" 1"
D["_POSIX_PTHREAD_SEMANTICS"]=" 1"
D["_TANDEM_SOURCE"]=" 1"
D["PACKAGE"]=" \"mpich\""
D["VERSION"]=" \"3.3rc1\""
D["HAVE_DLFCN_H"]=" 1"
D["LT_OBJDIR"]=" \".libs/\""
D["HAVE_ERROR_CHECKING"]=" MPID_ERROR_LEVEL_ALL"
D["MPICH_ERROR_MSG_LEVEL"]=" MPICH_ERROR_MSG__ALL"
D["HAVE_TAG_ERROR_BITS"]=" 1"
D["USE_LOGGING"]=" MPICH_LOGGING__NONE"
D["HAVE_PRAGMA_WEAK"]=" 1"
D["HAVE_WEAK_ATTRIBUTE"]=" 1"
D["USE_WEAK_SYMBOLS"]=" 1"
D["HAVE_MULTIPLE_PRAGMA_WEAK"]=" 1"
D["HAVE_VISIBILITY"]=" 1"
D["HWLOC_VERSION"]=" \"2.0.1rc2-git\""
D["HWLOC_SYM_PREFIX"]=" hwloc_"
D["HWLOC_SYM_PREFIX_CAPS"]=" HWLOC_"
D["HWLOC_SYM_TRANSFORM"]=" 0"
D["_HPUX_SOURCE"]=" 1"
D["SIZEOF_VOID_P"]=" 8"
D["HWLOC_LINUX_SYS"]=" 1"
D["HWLOC_HAVE_LINUXIO"]=" 1"
D["HWLOC_HAVE_LINUXPCI"]=" 1"
D["HWLOC_X86_64_ARCH"]=" 1"
D["SIZEOF_UNSIGNED_LONG"]=" 8"
D["HWLOC_SIZEOF_UNSIGNED_LONG"]=" 8"
D["SIZEOF_UNSIGNED_INT"]=" 4"
D["HWLOC_SIZEOF_UNSIGNED_INT"]=" 4"
D["HWLOC_HAVE_ATTRIBUTE"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_ALIGNED"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_ALWAYS_INLINE"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_COLD"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_CONST"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_DEPRECATED"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_FORMAT"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_HOT"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_MALLOC"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_MAY_ALIAS"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_NO_INSTRUMENT_FUNCTION"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_NONNULL"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_NORETURN"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_PACKED"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_PURE"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_SENTINEL"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_UNUSED"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_WARN_UNUSED_RESULT"]=" 1"
D["HWLOC_HAVE_ATTRIBUTE_WEAK_ALIAS"]=" 1"
D["HWLOC_C_HAVE_VISIBILITY"]=" 0"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_DIRENT_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_CTYPE_H"]=" 1"
D["HAVE_STRNCASECMP"]=" 1"
D["HWLOC_HAVE_DECL_STRNCASECMP"]=" 1"
D["HAVE_STRFTIME"]=" 1"
D["HAVE_SETLOCALE"]=" 1"
D["HWLOC_HAVE_STDINT_H"]=" 1"
D["HAVE_SYS_MMAN_H"]=" 1"
D["HAVE_DECL_FABSF"]=" 1"
D["HAVE_DECL__SC_NPROCESSORS_ONLN"]=" 1"
D["HAVE_DECL__SC_NPROCESSORS_CONF"]=" 1"
D["HAVE_DECL__SC_NPROC_ONLN"]=" 0"
D["HAVE_DECL__SC_NPROC_CONF"]=" 0"
D["HAVE_DECL__SC_PAGESIZE"]=" 1"
D["HAVE_DECL__SC_PAGE_SIZE"]=" 1"
D["HAVE_DECL__SC_LARGE_PAGESIZE"]=" 0"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_SYS_SYSCTL_H"]=" 1"
D["HAVE_DECL_CTL_HW"]=" 0"
D["HAVE_DECL_HW_NCPU"]=" 0"
D["HAVE_DECL_STRTOULL"]=" 1"
D["HAVE_SSIZE_T"]=" 1"
D["HAVE_DECL_SNPRINTF"]=" 1"
D["HAVE_DECL_STRCASECMP"]=" 1"
D["HAVE_DECL__STRDUP"]=" 0"
D["HAVE_DECL__PUTENV"]=" 0"
D["HAVE_DECL_GETPROGNAME"]=" 0"
D["HAVE_DECL_GETEXECNAME"]=" 0"
D["HAVE_DECL_GETMODULEFILENAME"]=" 0"
D["HAVE_PROGRAM_INVOCATION_NAME"]=" 1"
D["HAVE___PROGNAME"]=" 1"
D["HAVE_PTHREAD_T"]=" 1"
D["hwloc_pid_t"]=" pid_t"
D["hwloc_thread_t"]=" pthread_t"
D["HAVE_DECL_SCHED_GETCPU"]=" 1"
D["HWLOC_HAVE_SCHED_SETAFFINITY"]=" 1"
D["HWLOC_HAVE_CPU_SET"]=" 1"
D["HWLOC_HAVE_CPU_SET_S"]=" 1"
D["HWLOC_HAVE_SYSCALL"]=" 1"
D["HAVE_FFS"]=" 1"
D["HWLOC_HAVE_DECL_FFS"]=" 1"
D["HWLOC_HAVE_FFS"]=" 1"
D["HAVE_FFSL"]=" 1"
D["HWLOC_HAVE_DECL_FFSL"]=" 1"
D["HWLOC_HAVE_FFSL"]=" 1"
D["HAVE_OPENAT"]=" 1"
D["HAVE_MALLOC_H"]=" 1"
D["HAVE_GETPAGESIZE"]=" 1"
D["HAVE_MEMALIGN"]=" 1"
D["HAVE_POSIX_MEMALIGN"]=" 1"
D["HAVE_SYS_UTSNAME_H"]=" 1"
D["HAVE_UNAME"]=" 1"
D["HAVE_DECL_RUNNING_ON_VALGRIND"]=" 0"
D["HAVE_DECL_PTHREAD_SETAFFINITY_NP"]=" 1"
D["HAVE_DECL_PTHREAD_GETAFFINITY_NP"]=" 1"
D["X_DISPLAY_MISSING"]=" 1"
D["HWLOC_HAVE_X86_CPUID"]=" 1"
D["HWLOC_HAVE_PTHREAD_MUTEX"]=" 1"
D["HAVE_HWLOC"]=" 1"
D["MPICH_THREAD_LEVEL"]=" MPI_THREAD_MULTIPLE"
D["MPICH_IS_THREADED"]=" 1"
D["MPICH_THREAD_GRANULARITY"]=" MPICH_THREAD_GRANULARITY__GLOBAL"
D["MPICH_THREAD_REFCOUNT"]=" MPICH_REFCOUNT__NONE"
D["HAVE_ROMIO"]=" 1"
D["HAVE__FUNC__"]=" /**/"
D["HAVE__FUNCTION__"]=" /**/"
D["ENABLE_PVAR_NEM"]=" 0"
D["ENABLE_PVAR_RECVQ"]=" 0"
D["ENABLE_PVAR_RMA"]=" 0"
D["ENABLE_PVAR_DIMS"]=" 0"
D["HAVE_LONG_LONG"]=" 1"
D["STDCALL"]=" "
D["F77_NAME_LOWER_USCORE"]=" 1"
D["HAVE_MPI_F_INIT_WORKS_WITH_C"]=" 1"
D["HAVE_FORTRAN_BINDING"]=" 1"
D["HAVE_F08_BINDING"]=" 0"
D["TRUE"]=" 1"
D["FALSE"]=" 0"
D["HAVE_CXX_EXCEPTIONS"]=" /**/"
D["HAVE_NAMESPACES"]=" /**/"
D["HAVE_NAMESPACE_STD"]=" /**/"
D["HAVE_CXX_BINDING"]=" 1"
D["HAVE_NAMEPUB_SERVICE"]=" 1"
D["restrict"]=" __restrict"
D["HAVE_GCC_ATTRIBUTE"]=" 1"
D["HAVE_BUILTIN_EXPECT"]=" 1"
D["WORDS_LITTLEENDIAN"]=" 1"
D["HAVE_LONG_DOUBLE"]=" 1"
D["HAVE_LONG_LONG_INT"]=" 1"
D["HAVE_MAX_INTEGER_ALIGNMENT"]=" 8"
D["HAVE_MAX_STRUCT_ALIGNMENT"]=" 8"
D["HAVE_MAX_FP_ALIGNMENT"]=" 16"
D["HAVE_MAX_DOUBLE_FP_ALIGNMENT"]=" 8"
D["HAVE_MAX_LONG_DOUBLE_FP_ALIGNMENT"]=" 16"
D["SIZEOF_CHAR"]=" 1"
D["SIZEOF_UNSIGNED_CHAR"]=" 1"
D["SIZEOF_SHORT"]=" 2"
D["SIZEOF_UNSIGNED_SHORT"]=" 2"
D["SIZEOF_INT"]=" 4"
D["SIZEOF_UNSIGNED_INT"]=" 4"
D["SIZEOF_LONG"]=" 8"
D["SIZEOF_UNSIGNED_LONG"]=" 8"
D["SIZEOF_LONG_LONG"]=" 8"
D["SIZEOF_UNSIGNED_LONG_LONG"]=" 8"
D["SIZEOF_FLOAT"]=" 4"
D["SIZEOF_DOUBLE"]=" 8"
D["SIZEOF_LONG_DOUBLE"]=" 16"
D["SIZEOF_VOID_P"]=" 8"
D["STDC_HEADERS"]=" 1"
D["HAVE_STDDEF_H"]=" 1"
D["SIZEOF_WCHAR_T"]=" 4"
D["SIZEOF_FLOAT_INT"]=" 8"
D["SIZEOF_DOUBLE_INT"]=" 16"
D["SIZEOF_LONG_INT"]=" 16"
D["SIZEOF_SHORT_INT"]=" 8"
D["SIZEOF_TWO_INT"]=" 8"
D["SIZEOF_LONG_DOUBLE_INT"]=" 32"
D["HAVE_SYS_BITYPES_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_INT8_T"]=" 1"
D["HAVE_INT16_T"]=" 1"
D["HAVE_INT32_T"]=" 1"
D["HAVE_INT64_T"]=" 1"
D["HAVE_UINT8_T"]=" 1"
D["HAVE_UINT16_T"]=" 1"
D["HAVE_UINT32_T"]=" 1"
D["HAVE_UINT64_T"]=" 1"
D["HAVE_STDBOOL_H"]=" 1"
D["HAVE_COMPLEX_H"]=" 1"
D["SIZEOF__BOOL"]=" 1"
D["SIZEOF_FLOAT__COMPLEX"]=" 8"
D["SIZEOF_DOUBLE__COMPLEX"]=" 16"
D["SIZEOF_LONG_DOUBLE__COMPLEX"]=" 32"
D["HAVE__BOOL"]=" 1"
D["HAVE_FLOAT__COMPLEX"]=" 1"
D["HAVE_DOUBLE__COMPLEX"]=" 1"
D["HAVE_LONG_DOUBLE__COMPLEX"]=" 1"
D["MPIR_REAL4_CTYPE"]=" float"
D["MPIR_REAL8_CTYPE"]=" double"
D["MPIR_REAL16_CTYPE"]=" long double"
D["MPIR_INTEGER1_CTYPE"]=" char"
D["MPIR_INTEGER2_CTYPE"]=" short"
D["MPIR_INTEGER4_CTYPE"]=" int"
D["MPIR_INTEGER8_CTYPE"]=" long"
D["SIZEOF_F77_INTEGER"]=" 4"
D["SIZEOF_F77_REAL"]=" 4"
D["SIZEOF_F77_DOUBLE_PRECISION"]=" 8"
D["MPIR_FC_REAL_CTYPE"]=" float"
D["MPIR_FC_DOUBLE_CTYPE"]=" double"
D["HAVE_AINT_LARGER_THAN_FINT"]=" 1"
D["HAVE_AINT_DIFFERENT_THAN_FINT"]=" 1"
D["HAVE_FINT_IS_INT"]=" 1"
D["F77_TRUE_VALUE_SET"]=" 1"
D["F77_TRUE_VALUE"]=" 1"
D["F77_FALSE_VALUE"]=" 0"
D["SIZEOF_BOOL"]=" 1"
D["MPIR_CXX_BOOL_CTYPE"]=" _Bool"
D["SIZEOF_COMPLEX"]=" 8"
D["SIZEOF_DOUBLECOMPLEX"]=" 16"
D["SIZEOF_LONGDOUBLECOMPLEX"]=" 32"
D["HAVE_CXX_COMPLEX"]=" 1"
D["MPIR_CXX_BOOL_VALUE"]=" 0x4c000133"
D["MPIR_CXX_COMPLEX_VALUE"]=" 0x4c000834"
D["MPIR_CXX_DOUBLE_COMPLEX_VALUE"]=" 0x4c001035"
D["MPIR_CXX_LONG_DOUBLE_COMPLEX_VALUE"]=" 0x4c002036"
D["HAVE_ANY_INT64_T_ALIGNMENT"]=" 1"
D["HAVE_ANY_INT32_T_ALIGNMENT"]=" 1"
D["STDC_HEADERS"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STDARG_H"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_LIMITS_H"]=" 1"
D["HAVE_STDDEF_H"]=" 1"
D["HAVE_ERRNO_H"]=" 1"
D["HAVE_SYS_SOCKET_H"]=" 1"
D["HAVE_SYS_TIME_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_ENDIAN_H"]=" 1"
D["HAVE_ASSERT_H"]=" 1"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_SYS_UIO_H"]=" 1"
D["HAVE_SETITIMER"]=" 1"
D["HAVE_ALARM"]=" 1"
D["HAVE_VSNPRINTF"]=" 1"
D["HAVE_VSPRINTF"]=" 1"
D["HAVE_STRERROR"]=" 1"
D["HAVE_STRNCASECMP"]=" 1"
D["HAVE_DECL_STRERROR_R"]=" 1"
D["HAVE_STRERROR_R"]=" 1"
D["STRERROR_R_CHAR_P"]=" 1"
D["HAVE_SNPRINTF"]=" 1"
D["HAVE_QSORT"]=" 1"
D["HAVE_VA_COPY"]=" 1"
D["HAVE_MACRO_VA_ARGS"]=" 1"
D["HAVE_ALLOCA_H"]=" 1"
D["HAVE_ALLOCA"]=" 1"
D["HAVE_STRDUP"]=" 1"
D["HAVE_MKSTEMP"]=" 1"
D["HAVE_PUTENV"]=" 1"
D["MPIR_AINT_MAX"]=" LONG_MAX"
D["SIZEOF_PTR_IS_AINT"]=" 1"
D["SIZEOF_MPII_BSEND_DATA_T"]=" 96"
D["HAVE_SCHED_SETAFFINITY"]=" 1"
D["HAVE_SCHED_GETAFFINITY"]=" 1"
D["HAVE_CPU_SET_T"]=" 1"
D["HAVE_CPU_SET_MACROS"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_SYS_SOCKET_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_ASSERT_H"]=" 1"
D["HAVE_ARPA_INET_H"]=" 1"
D["HAVE_SNPRINTF"]=" 1"
D["HAVE_STRNCASECMP"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_SYS_SOCKET_H"]=" 1"
D["HAVE_NETINET_IN_H"]=" 1"
D["HAVE_NETINET_TCP_H"]=" 1"
D["HAVE_SYS_UN_H"]=" 1"
D["HAVE_NETDB_H"]=" 1"
D["USE_PMI_PORT"]=" 1"
D["HAVE_H_ADDR_LIST"]=" 1"
D["HAVE_GCC_ATTRIBUTE"]=" 1"
D["CH3_RANK_BITS"]=" 16"
D["HAVE_ASSERT_H"]=" 1"
D["HAVE_LIMITS_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_SYS_UIO_H"]=" 1"
D["HAVE_UUID_UUID_H"]=" 1"
D["HAVE_TIME_H"]=" 1"
D["HAVE_CTYPE_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_ARPA_INET_H"]=" 1"
D["HAVE_SYS_SOCKET_H"]=" 1"
D["HAVE_NET_IF_H"]=" 1"
D["HAVE_INET_PTON"]=" 1"
D["HAVE_GETHOSTNAME"]=" 1"
D["HAVE_TIME"]=" 1"
D["HAVE_NET_IF_H"]=" 1"
D["HAVE_ASSERT_H"]=" 1"
D["HAVE_NETDB_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_SCHED_H"]=" 1"
D["HAVE_SYS_MMAN_H"]=" 1"
D["HAVE_SYS_IOCTL_H"]=" 1"
D["HAVE_SYS_SOCKET_H"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_ERRNO_H"]=" 1"
D["HAVE_SYS_IPC_H"]=" 1"
D["HAVE_SYS_SHM_H"]=" 1"
D["HAVE_NETINET_IN_H"]=" 1"
D["HAVE_SIGNAL_H"]=" 1"
D["HAVE_SIGNAL"]=" 1"
D["HAVE_MKSTEMP"]=" 1"
D["HAVE_RAND"]=" 1"
D["HAVE_SRAND"]=" 1"
D["MPID_NEM_INLINE"]=" 1"
D["PREFETCH_CELL"]=" 1"
D["USE_FASTBOX"]=" 1"
D["HAVE_H_ADDR_LIST"]=" 1"
D["HAVE_STRUCT_IFCONF"]=" 1"
D["HAVE_STRUCT_IFREQ"]=" 1"
D["MPID_NEM_LOCAL_LMT_IMPL"]=" MPID_NEM_LOCAL_LMT_SHM_COPY"
D["MPID_NEM_USE_LOCK_FREE_QUEUES"]=" 1"
D["SIZEOF_OPA_PTR_T"]=" 8"
D["MPIR_OFFSET_MAX"]=" LLONG_MAX"
D["MPIR_COUNT_MAX"]=" LLONG_MAX"
D["MPIR_Ucount"]=" unsigned long long"
D["MPIF_STATUS_SIZE"]=" 5"
D["HAVE_STDIO_H"]=" 1"
D["HAVE_C_MULTI_ATTR_ALIAS"]=" 1"
D["HAVE_FC_TYPE_ROUTINES"]=" 1"
D["HAVE_MPICHCONF"]=" 1"
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\t (]|$)/ {
  line = $ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
  as_fn_error $? "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS"
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$ac_tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
$as_echo "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`$as_echo "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$ac_tmp/stdin" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

  case $INSTALL in
  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
  esac
  ac_MKDIR_P=$MKDIR_P
  case $MKDIR_P in
  [\\/$]* | ?:[\\/]* ) ;;
  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;
  esac
# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
  ac_datarootdir_hack='
  s&@datadir@&${datarootdir}&g
  s&@docdir@&${datarootdir}/doc/${PACKAGE_TARNAME}&g
  s&@infodir@&${datarootdir}/info&g
  s&@localedir@&${datarootdir}/locale&g
  s&@mandir@&${datarootdir}/man&g
  s&\${datarootdir}&${prefix}/share&g' ;;
esac
ac_sed_extra="/^[	 ]*VPATH[	 ]*=[	 ]*/{
h
s///
s/^/:/
s/[	 ]*$/:/
s/:\$(srcdir):/:/g
s/:\${srcdir}:/:/g
s/:@srcdir@:/:/g
s/^:*//
s/:*$//
x
s/\(=[	 ]*\).*/\1/
G
s/\n//
s/^[^=]*=[	 ]*$//
}

:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
s&@INSTALL@&$ac_INSTALL&;t t
s&@MKDIR_P@&$ac_MKDIR_P&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" |
if $ac_cs_awk_getline; then
  $AWK -f "$ac_tmp/subs.awk"
else
  $AWK -f "$ac_tmp/subs.awk" | $SHELL
fi \
  >$ac_tmp/out || as_fn_error $? "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$ac_tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' \
      "$ac_tmp/out"`; test -z "$ac_out"; } &&
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&5
$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&2;}

  rm -f "$ac_tmp/stdin"
  case $ac_file in
  -) cat "$ac_tmp/out" && rm -f "$ac_tmp/out";;
  *) rm -f "$ac_file" && mv "$ac_tmp/out" "$ac_file";;
  esac \
  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs"
    } >"$ac_tmp/config.h" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$ac_tmp/config.h" >/dev/null 2>&1; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
$as_echo "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$ac_tmp/config.h" "$ac_file" \
	|| as_fn_error $? "could not create $ac_file" "$LINENO" 5
    fi
  else
    $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error $? "could not create -" "$LINENO" 5
  fi
# Compute "$ac_file"'s index in $config_headers.
_am_arg="$ac_file"
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`$as_dirname -- "$_am_arg" ||
$as_expr X"$_am_arg" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$_am_arg" : 'X\(//\)[^/]' \| \
	 X"$_am_arg" : 'X\(//\)$' \| \
	 X"$_am_arg" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$_am_arg" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`/stamp-h$_am_stamp_count
 ;;

  :C)  { $as_echo "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
$as_echo "$as_me: executing $ac_file commands" >&6;}
 ;;
  esac


  case $ac_file$ac_mode in
    "depfiles":C) test x"$AMDEP_TRUE" != x"" || {
  # Older Autoconf quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  case $CONFIG_FILES in
  *\'*) eval set x "$CONFIG_FILES" ;;
  *)   set x $CONFIG_FILES ;;
  esac
  shift
  for mf
  do
    # Strip MF so we end up with the name of the file.
    mf=`echo "$mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile or not.
    # We used to match only the files named 'Makefile.in', but
    # some people rename them; so instead we look at the file content.
    # Grep'ing the first line is not enough: some people post-process
    # each Makefile.in and add a new line on top of each file to say so.
    # Grep'ing the whole file is not good either: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
      dirpart=`$as_dirname -- "$mf" ||
$as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$mf" : 'X\(//\)[^/]' \| \
	 X"$mf" : 'X\(//\)$' \| \
	 X"$mf" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$mf" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
    else
      continue
    fi
    # Extract the definition of DEPDIR, am__include, and am__quote
    # from the Makefile without running 'make'.
    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
    test -z "$DEPDIR" && continue
    am__include=`sed -n 's/^am__include = //p' < "$mf"`
    test -z "$am__include" && continue
    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
    # Find all dependency output files, they are included files with
    # $(DEPDIR) in their names.  We invoke sed twice because it is the
    # simplest approach to changing $(DEPDIR) to its actual value in the
    # expansion.
    for file in `sed -n "
      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g'`; do
      # Make sure the directory exists.
      test -f "$dirpart/$file" && continue
      fdir=`$as_dirname -- "$file" ||
$as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$file" : 'X\(//\)[^/]' \| \
	 X"$file" : 'X\(//\)$' \| \
	 X"$file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      as_dir=$dirpart/$fdir; as_fn_mkdir_p
      # echo "creating $dirpart/$file"
      echo '# dummy' > "$dirpart/$file"
    done
  done
}
 ;;
    "libtool":C)

    # See if we are running on zsh, and set the options that allow our
    # commands through without removal of \ escapes.
    if test -n "${ZSH_VERSION+set}"; then
      setopt NO_GLOB_SUBST
    fi

    cfgfile=${ofile}T
    trap "$RM \"$cfgfile\"; exit 1" 1 2 15
    $RM "$cfgfile"

    cat <<_LT_EOF >> "$cfgfile"
#! $SHELL
# Generated automatically by $as_me ($PACKAGE) $VERSION
# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
# NOTE: Changes made to this file will be lost: look at ltmain.sh.

# Provide generalized library-building support services.
# Written by Gordon Matzigkeit, 1996

# Copyright (C) 2014 Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.  There is NO
# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

# GNU Libtool is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of of the License, or
# (at your option) any later version.
#
# As a special exception to the GNU General Public License, if you
# distribute this file as part of a program or library that is built
# using GNU Libtool, you may include this file under the  same
# distribution terms that you use for the rest of that program.
#
# GNU Libtool is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# The names of the tagged configurations supported by this script.
available_tags='CXX FC F77 '

# Configured defaults for sys_lib_dlsearch_path munging.
: \${LT_SYS_LIBRARY_PATH="$configure_time_lt_sys_library_path"}

# ### BEGIN LIBTOOL CONFIG

# Which release of libtool.m4 was used?
macro_version=$macro_version
macro_revision=$macro_revision

# Whether or not to build shared libraries.
build_libtool_libs=$enable_shared

# Whether or not to build static libraries.
build_old_libs=$enable_static

# What type of objects to build.
pic_mode=$pic_mode

# Whether or not to optimize for fast installation.
fast_install=$enable_fast_install

# Shared archive member basename,for filename based shared library versioning on AIX.
shared_archive_member_spec=$shared_archive_member_spec

# Shell to use when invoking shell scripts.
SHELL=$lt_SHELL

# An echo program that protects backslashes.
ECHO=$lt_ECHO

# The PATH separator for the build system.
PATH_SEPARATOR=$lt_PATH_SEPARATOR

# The host system.
host_alias=$host_alias
host=$host
host_os=$host_os

# The build system.
build_alias=$build_alias
build=$build
build_os=$build_os

# A sed program that does not truncate output.
SED=$lt_SED

# Sed that helps us avoid accidentally triggering echo(1) options like -n.
Xsed="\$SED -e 1s/^X//"

# A grep program that handles long lines.
GREP=$lt_GREP

# An ERE matcher.
EGREP=$lt_EGREP

# A literal string matcher.
FGREP=$lt_FGREP

# A BSD- or MS-compatible name lister.
NM=$lt_NM

# Whether we need soft or hard links.
LN_S=$lt_LN_S

# What is the maximum length of a command?
max_cmd_len=$max_cmd_len

# Object file suffix (normally "o").
objext=$ac_objext

# Executable file suffix (normally "").
exeext=$exeext

# whether the shell understands "unset".
lt_unset=$lt_unset

# turn spaces into newlines.
SP2NL=$lt_lt_SP2NL

# turn newlines into spaces.
NL2SP=$lt_lt_NL2SP

# convert \$build file names to \$host format.
to_host_file_cmd=$lt_cv_to_host_file_cmd

# convert \$build files to toolchain format.
to_tool_file_cmd=$lt_cv_to_tool_file_cmd

# An object symbol dumper.
OBJDUMP=$lt_OBJDUMP

# Method to check whether dependent libraries are shared objects.
deplibs_check_method=$lt_deplibs_check_method

# Command to use when deplibs_check_method = "file_magic".
file_magic_cmd=$lt_file_magic_cmd

# How to find potential files when deplibs_check_method = "file_magic".
file_magic_glob=$lt_file_magic_glob

# Find potential files using nocaseglob when deplibs_check_method = "file_magic".
want_nocaseglob=$lt_want_nocaseglob

# DLL creation program.
DLLTOOL=$lt_DLLTOOL

# Command to associate shared and link libraries.
sharedlib_from_linklib_cmd=$lt_sharedlib_from_linklib_cmd

# The archiver.
AR=$lt_AR

# Flags to create an archive.
AR_FLAGS=$lt_AR_FLAGS

# How to feed a file listing to the archiver.
archiver_list_spec=$lt_archiver_list_spec

# A symbol stripping program.
STRIP=$lt_STRIP

# Commands used to install an old-style archive.
RANLIB=$lt_RANLIB
old_postinstall_cmds=$lt_old_postinstall_cmds
old_postuninstall_cmds=$lt_old_postuninstall_cmds

# Whether to use a lock for old archive extraction.
lock_old_archive_extraction=$lock_old_archive_extraction

# A C compiler.
LTCC=$lt_CC

# LTCC compiler flags.
LTCFLAGS=$lt_CFLAGS

# Take the output of nm and produce a listing of raw symbols and C names.
global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe

# Transform the output of nm in a proper C declaration.
global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl

# Transform the output of nm into a list of symbols to manually relocate.
global_symbol_to_import=$lt_lt_cv_sys_global_symbol_to_import

# Transform the output of nm in a C name address pair.
global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address

# Transform the output of nm in a C name address pair when lib prefix is needed.
global_symbol_to_c_name_address_lib_prefix=$lt_lt_cv_sys_global_symbol_to_c_name_address_lib_prefix

# The name lister interface.
nm_interface=$lt_lt_cv_nm_interface

# Specify filename containing input files for \$NM.
nm_file_list_spec=$lt_nm_file_list_spec

# The root where to search for dependent libraries,and where our libraries should be installed.
lt_sysroot=$lt_sysroot

# Command to truncate a binary pipe.
lt_truncate_bin=$lt_lt_cv_truncate_bin

# The name of the directory that contains temporary libtool files.
objdir=$objdir

# Used to examine libraries when file_magic_cmd begins with "file".
MAGIC_CMD=$MAGIC_CMD

# Must we lock files when doing compilation?
need_locks=$lt_need_locks

# Manifest tool.
MANIFEST_TOOL=$lt_MANIFEST_TOOL

# Tool to manipulate archived DWARF debug symbol files on Mac OS X.
DSYMUTIL=$lt_DSYMUTIL

# Tool to change global to local symbols on Mac OS X.
NMEDIT=$lt_NMEDIT

# Tool to manipulate fat objects and archives on Mac OS X.
LIPO=$lt_LIPO

# ldd/readelf like tool for Mach-O binaries on Mac OS X.
OTOOL=$lt_OTOOL

# ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4.
OTOOL64=$lt_OTOOL64

# Old archive suffix (normally "a").
libext=$libext

# Shared library suffix (normally ".so").
shrext_cmds=$lt_shrext_cmds

# The commands to extract the exported symbol list from a shared archive.
extract_expsyms_cmds=$lt_extract_expsyms_cmds

# Variables whose values should be saved in libtool wrapper scripts and
# restored at link time.
variables_saved_for_relink=$lt_variables_saved_for_relink

# Do we need the "lib" prefix for modules?
need_lib_prefix=$need_lib_prefix

# Do we need a version for libraries?
need_version=$need_version

# Library versioning type.
version_type=$version_type

# Shared library runtime path variable.
runpath_var=$runpath_var

# Shared library path variable.
shlibpath_var=$shlibpath_var

# Is shlibpath searched before the hard-coded library search path?
shlibpath_overrides_runpath=$shlibpath_overrides_runpath

# Format of library name prefix.
libname_spec=$lt_libname_spec

# List of archive names.  First name is the real one, the rest are links.
# The last name is the one that the linker finds with -lNAME
library_names_spec=$lt_library_names_spec

# The coded name of the library, if different from the real name.
soname_spec=$lt_soname_spec

# Permission mode override for installation of shared libraries.
install_override_mode=$lt_install_override_mode

# Command to use after installation of a shared archive.
postinstall_cmds=$lt_postinstall_cmds

# Command to use after uninstallation of a shared archive.
postuninstall_cmds=$lt_postuninstall_cmds

# Commands used to finish a libtool library installation in a directory.
finish_cmds=$lt_finish_cmds

# As "finish_cmds", except a single script fragment to be evaled but
# not shown.
finish_eval=$lt_finish_eval

# Whether we should hardcode library paths into libraries.
hardcode_into_libs=$hardcode_into_libs

# Compile-time system search path for libraries.
sys_lib_search_path_spec=$lt_sys_lib_search_path_spec

# Detected run-time system search path for libraries.
sys_lib_dlsearch_path_spec=$lt_configure_time_dlsearch_path

# Explicit LT_SYS_LIBRARY_PATH set during ./configure time.
configure_time_lt_sys_library_path=$lt_configure_time_lt_sys_library_path

# Whether dlopen is supported.
dlopen_support=$enable_dlopen

# Whether dlopen of programs is supported.
dlopen_self=$enable_dlopen_self

# Whether dlopen of statically linked programs is supported.
dlopen_self_static=$enable_dlopen_self_static

# Commands to strip libraries.
old_striplib=$lt_old_striplib
striplib=$lt_striplib


# The linker used to build libraries.
LD=$lt_LD

# How to create reloadable object files.
reload_flag=$lt_reload_flag
reload_cmds=$lt_reload_cmds

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds

# A language specific compiler.
CC=$lt_compiler

# Is the compiler the GNU compiler?
with_gcc=$GCC

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds
archive_expsym_cmds=$lt_archive_expsym_cmds

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds
module_expsym_cmds=$lt_module_expsym_cmds

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \$shlibpath_var if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds

# Commands necessary for finishing linking programs.
postlink_cmds=$lt_postlink_cmds

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects
postdep_objects=$lt_postdep_objects
predeps=$lt_predeps
postdeps=$lt_postdeps

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path

# ### END LIBTOOL CONFIG

_LT_EOF

    cat <<'_LT_EOF' >> "$cfgfile"

# ### BEGIN FUNCTIONS SHARED WITH CONFIGURE

# func_munge_path_list VARIABLE PATH
# -----------------------------------
# VARIABLE is name of variable containing _space_ separated list of
# directories to be munged by the contents of PATH, which is string
# having a format:
# "DIR[:DIR]:"
#       string "DIR[ DIR]" will be prepended to VARIABLE
# ":DIR[:DIR]"
#       string "DIR[ DIR]" will be appended to VARIABLE
# "DIRP[:DIRP]::[DIRA:]DIRA"
#       string "DIRP[ DIRP]" will be prepended to VARIABLE and string
#       "DIRA[ DIRA]" will be appended to VARIABLE
# "DIR[:DIR]"
#       VARIABLE will be replaced by "DIR[ DIR]"
func_munge_path_list ()
{
    case x$2 in
    x)
        ;;
    *:)
        eval $1=\"`$ECHO $2 | $SED 's/:/ /g'` \$$1\"
        ;;
    x:*)
        eval $1=\"\$$1 `$ECHO $2 | $SED 's/:/ /g'`\"
        ;;
    *::*)
        eval $1=\"\$$1\ `$ECHO $2 | $SED -e 's/.*:://' -e 's/:/ /g'`\"
        eval $1=\"`$ECHO $2 | $SED -e 's/::.*//' -e 's/:/ /g'`\ \$$1\"
        ;;
    *)
        eval $1=\"`$ECHO $2 | $SED 's/:/ /g'`\"
        ;;
    esac
}


# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.
func_cc_basename ()
{
    for cc_temp in $*""; do
      case $cc_temp in
        compile | *[\\/]compile | ccache | *[\\/]ccache ) ;;
        distcc | *[\\/]distcc | purify | *[\\/]purify ) ;;
        \-*) ;;
        *) break;;
      esac
    done
    func_cc_basename_result=`$ECHO "$cc_temp" | $SED "s%.*/%%; s%^$host_alias-%%"`
}


# ### END FUNCTIONS SHARED WITH CONFIGURE

_LT_EOF

  case $host_os in
  aix3*)
    cat <<\_LT_EOF >> "$cfgfile"
# AIX sometimes has problems with the GCC collect2 program.  For some
# reason, if we set the COLLECT_NAMES environment variable, the problems
# vanish in a puff of smoke.
if test set != "${COLLECT_NAMES+set}"; then
  COLLECT_NAMES=
  export COLLECT_NAMES
fi
_LT_EOF
    ;;
  esac


ltmain=$ac_aux_dir/ltmain.sh


  # We use sed instead of cat because bash on DJGPP gets confused if
  # if finds mixed CR/LF and LF-only lines.  Since sed operates in
  # text mode, it properly converts lines to CR/LF.  This bash problem
  # is reportedly fixed, but why not run on old versions too?
  sed '$q' "$ltmain" >> "$cfgfile" \
     || (rm -f "$cfgfile"; exit 1)

   mv -f "$cfgfile" "$ofile" ||
    (rm -f "$ofile" && cp "$cfgfile" "$ofile" && rm -f "$cfgfile")
  chmod +x "$ofile"


    cat <<_LT_EOF >> "$ofile"

# ### BEGIN LIBTOOL TAG CONFIG: CXX

# The linker used to build libraries.
LD=$lt_LD_CXX

# How to create reloadable object files.
reload_flag=$lt_reload_flag_CXX
reload_cmds=$lt_reload_cmds_CXX

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds_CXX

# A language specific compiler.
CC=$lt_compiler_CXX

# Is the compiler the GNU compiler?
with_gcc=$GCC_CXX

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_CXX

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic_CXX

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl_CXX

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static_CXX

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o_CXX

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc_CXX

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_CXX

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec_CXX

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec_CXX

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object_CXX

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds_CXX

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_CXX

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds_CXX
archive_expsym_cmds=$lt_archive_expsym_cmds_CXX

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds_CXX
module_expsym_cmds=$lt_module_expsym_cmds_CXX

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld_CXX

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag_CXX

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag_CXX

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_CXX

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator_CXX

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct_CXX

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \$shlibpath_var if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute_CXX

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L_CXX

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var_CXX

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic_CXX

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath_CXX

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs_CXX

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols_CXX

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds_CXX

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms_CXX

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms_CXX

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds_CXX

# Commands necessary for finishing linking programs.
postlink_cmds=$lt_postlink_cmds_CXX

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec_CXX

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action_CXX

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs_CXX

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects_CXX
postdep_objects=$lt_postdep_objects_CXX
predeps=$lt_predeps_CXX
postdeps=$lt_postdeps_CXX

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path_CXX

# ### END LIBTOOL TAG CONFIG: CXX
_LT_EOF


    cat <<_LT_EOF >> "$ofile"

# ### BEGIN LIBTOOL TAG CONFIG: FC

# The linker used to build libraries.
LD=$lt_LD_FC

# How to create reloadable object files.
reload_flag=$lt_reload_flag_FC
reload_cmds=$lt_reload_cmds_FC

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds_FC

# A language specific compiler.
CC=$lt_compiler_FC

# Is the compiler the GNU compiler?
with_gcc=$GCC_FC

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_FC

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic_FC

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl_FC

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static_FC

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o_FC

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc_FC

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_FC

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec_FC

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec_FC

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object_FC

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds_FC

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_FC

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds_FC
archive_expsym_cmds=$lt_archive_expsym_cmds_FC

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds_FC
module_expsym_cmds=$lt_module_expsym_cmds_FC

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld_FC

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag_FC

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag_FC

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_FC

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator_FC

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct_FC

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \$shlibpath_var if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute_FC

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L_FC

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var_FC

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic_FC

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath_FC

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs_FC

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols_FC

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds_FC

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms_FC

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms_FC

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds_FC

# Commands necessary for finishing linking programs.
postlink_cmds=$lt_postlink_cmds_FC

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec_FC

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action_FC

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs_FC

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects_FC
postdep_objects=$lt_postdep_objects_FC
predeps=$lt_predeps_FC
postdeps=$lt_postdeps_FC

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path_FC

# ### END LIBTOOL TAG CONFIG: FC
_LT_EOF


    cat <<_LT_EOF >> "$ofile"

# ### BEGIN LIBTOOL TAG CONFIG: F77

# The linker used to build libraries.
LD=$lt_LD_F77

# How to create reloadable object files.
reload_flag=$lt_reload_flag_F77
reload_cmds=$lt_reload_cmds_F77

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds_F77

# A language specific compiler.
CC=$lt_compiler_F77

# Is the compiler the GNU compiler?
with_gcc=$GCC_F77

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_F77

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic_F77

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl_F77

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static_F77

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o_F77

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc_F77

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_F77

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec_F77

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec_F77

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object_F77

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds_F77

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_F77

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds_F77
archive_expsym_cmds=$lt_archive_expsym_cmds_F77

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds_F77
module_expsym_cmds=$lt_module_expsym_cmds_F77

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld_F77

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag_F77

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag_F77

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_F77

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator_F77

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct_F77

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \$shlibpath_var if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute_F77

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L_F77

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var_F77

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic_F77

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath_F77

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs_F77

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols_F77

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds_F77

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms_F77

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms_F77

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds_F77

# Commands necessary for finishing linking programs.
postlink_cmds=$lt_postlink_cmds_F77

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec_F77

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action_F77

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs_F77

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects_F77
postdep_objects=$lt_postdep_objects_F77
predeps=$lt_predeps_F77
postdeps=$lt_postdeps_F77

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path_F77

# ### END LIBTOOL TAG CONFIG: F77
_LT_EOF

 ;;
    "default-1":C) if test "$enable_f77" = yes ; then
if test "$has_exclaim" = "yes" ; then
    sed -e 's/^C/\!/g' src/binding/fortran/mpif_h/mpif.h > src/include/mpif.h
	cp src/include/mpif.h src/binding/fortran/mpif_h/mpif.h
else
    cp src/binding/fortran/mpif_h/mpif.h src/include
fi
if test "$has_fort_real8" = "yes" ; then
    sed -e 's/DOUBLE PRECISION/REAL*8/g' src/include/mpif.h > src/include/mpif.h.new
    mv src/include/mpif.h.new src/include/mpif.h
    cp src/include/mpif.h src/binding/fortran/mpif_h/mpif.h
fi
fi ;;
    "default-2":C)
for prog in $EXTERNAL_SETUPS - ; do
    if test "$prog" != "-" ; then
      dir=`dirname $prog`
      name=`basename $prog`
      (cd $dir && ./$name)
    fi
done ;;
    "default-3":C) if [ ! -d lib ] ; then mkdir lib ; fi
date > lib/newconfig ;;
    "default-4":C) chmod a+x test/commands/cmdtests ;;

  esac
done # for ac_tag


as_fn_exit 0
